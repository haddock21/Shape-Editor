{"ast":null,"code":"var _jsxFileName = \"/home/nightsquid/Desktop/GUI II/studyspace/src/components/Canvas.js\",\n  _s2 = $RefreshSig$();\n// src/components/Canvas.js\nimport React, { forwardRef, useImperativeHandle, useRef, useEffect, useState } from \"react\";\nimport { jsPDF } from \"jspdf\";\nimport \"../css/canvas.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = /*#__PURE__*/_s2(/*#__PURE__*/forwardRef(_c = _s2(({\n  activeTool,\n  lineColor,\n  fillColor\n}, ref) => {\n  _s2();\n  const containerRef = useRef(null);\n  const c1Ref = useRef(null);\n  const c2Ref = useRef(null);\n  const tctx = useRef(null);\n  const shapesRef = useRef([]);\n  const redoRef = useRef([]);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [startPos, setStartPos] = useState({\n    x: 0,\n    y: 0\n  });\n\n  // 1) Expose export/load/download handlers\n  useImperativeHandle(ref, () => {\n    var _s = $RefreshSig$();\n    return {\n      exportShapes: () => {\n        const data = JSON.stringify(shapesRef.current, null, 2);\n        const blob = new Blob([data], {\n          type: \"application/json\"\n        });\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement(\"a\");\n        a.href = url;\n        a.download = \"shapes.json\";\n        a.click();\n        URL.revokeObjectURL(url);\n      },\n      downloadJPEG: _s(() => {\n        _s();\n        // 1) compute minX, minY, maxX, maxY *including* circles’ radii\n        let minX = Infinity,\n          minY = Infinity,\n          maxX = -Infinity,\n          maxY = -Infinity;\n        shapesRef.current.forEach(s => {\n          if (s.tool === \"circle\" || s.tool === \"polygon\") {\n            const r = Math.hypot(s.x1 - s.x0, s.y1 - s.y0);\n            minX = Math.min(minX, s.x0 - r);\n            maxX = Math.max(maxX, s.x0 + r);\n            minY = Math.min(minY, s.y0 - r);\n            maxY = Math.max(maxY, s.y0 + r);\n          } else {\n            minX = Math.min(minX, s.x0, s.x1);\n            maxX = Math.max(maxX, s.x0, s.x1);\n            minY = Math.min(minY, s.y0, s.y1);\n            maxY = Math.max(maxY, s.y0, s.y1);\n          }\n        });\n        if (minX === Infinity) {\n          // no shapes — just default to whole UI canvas\n          minX = 0;\n          minY = 0;\n          maxX = c1Ref.current.width;\n          maxY = c1Ref.current.height;\n        }\n        const pad = 20;\n        minX = Math.max(0, minX - pad);\n        minY = Math.max(0, minY - pad);\n        maxX = Math.min(c1Ref.current.width, maxX + pad);\n        maxY = Math.min(c1Ref.current.height, maxY + pad);\n        const sw = maxX - minX;\n        const sh = maxY - minY;\n\n        // 2) new offscreen canvas\n        const tmp = document.createElement(\"canvas\");\n        tmp.width = sw;\n        tmp.height = sh;\n        const tctx = useRef(null);\n\n        // 3) replay draw logic into tmp, offset by -minX, -minY\n        redrawAll(tctx, -minX, -minY);\n\n        // 4) export\n        const dataURL = tmp.toDataURL(\"image/jpeg\", 1.0);\n        const link = document.createElement(\"a\");\n        link.href = dataURL;\n        link.download = \"shapes.jpg\";\n        link.click();\n      }, \"ULJ42h9ddoxX2RlTa2AhCLvoWTc=\"),\n      downloadPDF: () => {\n        const canvas = c1Ref.current;\n        const shapes = shapesRef.current;\n\n        // same crop logic\n        let sx = 0,\n          sy = 0,\n          sw = canvas.width,\n          sh = canvas.height;\n        if (shapes.length) {\n          let minX = Infinity,\n            minY = Infinity;\n          let maxX = -Infinity,\n            maxY = -Infinity;\n          shapes.forEach(s => {\n            minX = Math.min(minX, s.x0, s.x1);\n            minY = Math.min(minY, s.y0, s.y1);\n            maxX = Math.max(maxX, s.x0, s.x1);\n            maxY = Math.max(maxY, s.y0, s.y1);\n          });\n          sx = minX;\n          sy = minY;\n          sw = maxX - minX;\n          sh = maxY - minY;\n        }\n\n        // offscreen crop\n        const tmp = document.createElement(\"canvas\");\n        tmp.width = sw;\n        tmp.height = sh;\n        const tctx = tmp.getContext(\"2d\");\n        tctx.drawImage(canvas, sx, sy, sw, sh, 0, 0, sw, sh);\n\n        // export to PDF\n        const imgData = tmp.toDataURL(\"image/jpeg\", 1.0);\n        const pdf = new jsPDF({\n          unit: \"px\",\n          format: [sw, sh]\n        });\n        pdf.addImage(imgData, \"JPEG\", 0, 0, sw, sh);\n        pdf.save(\"shapes.pdf\");\n      },\n      loadShapes: arr => {\n        shapesRef.current = arr.map(s => ({\n          ...s,\n          selected: false\n        }));\n        redrawAll();\n      }\n    };\n  });\n\n  // 2) Resize loop: keep canvas internal size in sync with CSS size\n  useEffect(() => {\n    const resize = () => {\n      const {\n        width,\n        height\n      } = containerRef.current.getBoundingClientRect();\n      c1Ref.current.width = width;\n      c1Ref.current.height = height;\n      c2Ref.current.width = width;\n      c2Ref.current.height = height;\n      redrawAll();\n    };\n    resize();\n    window.addEventListener(\"resize\", resize);\n    return () => window.removeEventListener(\"resize\", resize);\n  }, []);\n\n  // 3) Redraw everything (with baked-in background)\n  function redrawAll(context = c1Ref, offsetX = 0, offsetY = 0) {\n    const c = context.current;\n    const ctx = c.getContext(\"2d\");\n    const w = ctx.canvas.width;\n    const h = ctx.canvas.height;\n\n    // 1) clear & paint background\n    ctx.clearRect(0, 0, w, h);\n    ctx.fillStyle = \"#979797\";\n    ctx.fillRect(0, 0, w, h);\n\n    // 2) draw each shape, offset by offsetX/offsetY\n    shapesRef.current.forEach(s => {\n      const lc = s.lineColor || lineColor;\n      const fc = s.fillColor || fillColor;\n      ctx.save();\n      ctx.strokeStyle = lc;\n      ctx.fillStyle = fc;\n      ctx.lineWidth = 1;\n      ctx.beginPath();\n      const x0 = s.x0 + offsetX;\n      const y0 = s.y0 + offsetY;\n      const x1 = s.x1 + offsetX;\n      const y1 = s.y1 + offsetY;\n      switch (s.tool) {\n        case \"square\":\n          ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n          ctx.strokeRect(x0, y0, x1 - x0, y1 - y0);\n          break;\n        case \"line\":\n          ctx.moveTo(x0, y0);\n          ctx.lineTo(x1, y1);\n          ctx.stroke();\n          break;\n        case \"circle\":\n          const r = Math.hypot(s.x1 - s.x0, s.y1 - s.y0);\n          ctx.arc(x0, y0, r, 0, 2 * Math.PI);\n          ctx.fill();\n          ctx.stroke();\n          break;\n        case \"triangle\":\n          ctx.moveTo(x0, y0);\n          ctx.lineTo(x1, y0);\n          ctx.lineTo((x0 + x1) / 2, y1);\n          ctx.closePath();\n          ctx.fill();\n          ctx.stroke();\n          break;\n        case \"polygon\":\n          const sides = 5;\n          const radius = Math.hypot(s.x1 - s.x0, s.y1 - s.y0);\n          const step = 2 * Math.PI / sides;\n          for (let i = 0; i < sides; i++) {\n            const ang = i * step - Math.PI / 2;\n            const px = s.x0 + radius * Math.cos(ang) + offsetX;\n            const py = s.y0 + radius * Math.sin(ang) + offsetY;\n            i === 0 ? ctx.moveTo(px, py) : ctx.lineTo(px, py);\n          }\n          ctx.closePath();\n          ctx.fill();\n          ctx.stroke();\n          break;\n      }\n\n      // 3) if shape is selected, draw red bounding box\n      if (s.selected) {\n        const bx0 = Math.min(s.x0, s.x1) + offsetX;\n        const by0 = Math.min(s.y0, s.y1) + offsetY;\n        const bw = Math.abs(s.x1 - s.x0);\n        const bh = Math.abs(s.y1 - s.y0);\n        ctx.strokeStyle = \"red\";\n        ctx.strokeRect(bx0, by0, bw, bh);\n      }\n      ctx.restore();\n    });\n  }\n\n  // 4) Drawing & selection logic\n  useEffect(() => {\n    const c2 = c2Ref.current;\n    const ctx2 = c2.getContext(\"2d\");\n    const getPos = e => {\n      const r = c2.getBoundingClientRect();\n      return {\n        x: e.clientX - r.left,\n        y: e.clientY - r.top\n      };\n    };\n    const down = e => {\n      if (activeTool === \"cursor\") {\n        const pos = getPos(e);\n        shapesRef.current.forEach(s => s.selected = false);\n        for (let i = shapesRef.current.length - 1; i >= 0; i--) {\n          const s = shapesRef.current[i],\n            minX = Math.min(s.x0, s.x1),\n            maxX = Math.max(s.x0, s.x1),\n            minY = Math.min(s.y0, s.y1),\n            maxY = Math.max(s.y0, s.y1);\n          if (pos.x >= minX && pos.x <= maxX && pos.y >= minY && pos.y <= maxY) {\n            s.selected = true;\n            break;\n          }\n        }\n        redrawAll();\n        return;\n      }\n      if (![\"square\", \"line\", \"circle\", \"triangle\", \"polygon\"].includes(activeTool)) return;\n      setStartPos(getPos(e));\n      setIsDrawing(true);\n    };\n    const move = e => {\n      if (!isDrawing) return;\n      const {\n        x,\n        y\n      } = getPos(e);\n      const dx = x - startPos.x,\n        dy = y - startPos.y;\n      ctx2.clearRect(0, 0, c2.width, c2.height);\n      ctx2.strokeStyle = lineColor;\n      ctx2.beginPath();\n      switch (activeTool) {\n        case \"square\":\n          ctx2.strokeRect(startPos.x, startPos.y, dx, dy);\n          break;\n        case \"line\":\n          ctx2.moveTo(startPos.x, startPos.y);\n          ctx2.lineTo(x, y);\n          ctx2.stroke();\n          break;\n        case \"circle\":\n          ctx2.arc(startPos.x, startPos.y, Math.hypot(dx, dy), 0, 2 * Math.PI);\n          ctx2.stroke();\n          break;\n        case \"triangle\":\n          ctx2.moveTo(startPos.x, startPos.y);\n          ctx2.lineTo(startPos.x + dx, startPos.y);\n          ctx2.lineTo(startPos.x + dx / 2, startPos.y + dy);\n          ctx2.closePath();\n          ctx2.stroke();\n          break;\n        case \"polygon\":\n          const sides2 = 5,\n            rad2 = Math.hypot(dx, dy),\n            step2 = 2 * Math.PI / sides2;\n          for (let i = 0; i < sides2; i++) {\n            const ang = i * step2 - Math.PI / 2,\n              px = startPos.x + rad2 * Math.cos(ang),\n              py = startPos.y + rad2 * Math.sin(ang);\n            i === 0 ? ctx2.moveTo(px, py) : ctx2.lineTo(px, py);\n          }\n          ctx2.closePath();\n          ctx2.stroke();\n          break;\n      }\n    };\n    const up = e => {\n      if (!isDrawing) return;\n      const {\n        x,\n        y\n      } = getPos(e);\n      shapesRef.current.push({\n        tool: activeTool,\n        x0: startPos.x,\n        y0: startPos.y,\n        x1: x,\n        y1: y,\n        lineColor,\n        fillColor,\n        selected: false\n      });\n      redrawAll();\n      ctx2.clearRect(0, 0, c2.width, c2.height);\n      setIsDrawing(false);\n    };\n    const onKeyDown = e => {\n      if (e.ctrlKey && e.key === \"z\" && shapesRef.current.length) {\n        redoRef.current.push(shapesRef.current.pop());\n        redrawAll();\n      } else if (e.ctrlKey && e.shiftKey && e.key.toLowerCase() === \"z\" && redoRef.current.length) {\n        shapesRef.current.push(redoRef.current.pop());\n        redrawAll();\n      }\n    };\n    c2.addEventListener(\"mousedown\", down);\n    c2.addEventListener(\"mousemove\", move);\n    c2.addEventListener(\"mouseup\", up);\n    window.addEventListener(\"keydown\", onKeyDown);\n    return () => {\n      c2.removeEventListener(\"mousedown\", down);\n      c2.removeEventListener(\"mousemove\", move);\n      c2.removeEventListener(\"mouseup\", up);\n      window.removeEventListener(\"keydown\", onKeyDown);\n    };\n  }, [activeTool, isDrawing, startPos, lineColor, fillColor]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    className: \"canvas-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: c1Ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: c2Ref,\n      style: {\n        backgroundColor: \"transparent\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 334,\n    columnNumber: 9\n  }, this);\n}, \"zNzQ3P/P7XjOgGLN7ruqYFVjV54=\")), \"zNzQ3P/P7XjOgGLN7ruqYFVjV54=\");\n_c2 = Canvas;\nexport default Canvas;\nvar _c, _c2;\n$RefreshReg$(_c, \"Canvas$forwardRef\");\n$RefreshReg$(_c2, \"Canvas\");","map":{"version":3,"names":["React","forwardRef","useImperativeHandle","useRef","useEffect","useState","jsPDF","jsxDEV","_jsxDEV","Canvas","_s2","_c","activeTool","lineColor","fillColor","ref","containerRef","c1Ref","c2Ref","tctx","shapesRef","redoRef","isDrawing","setIsDrawing","startPos","setStartPos","x","y","_s","$RefreshSig$","exportShapes","data","JSON","stringify","current","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","downloadJPEG","minX","Infinity","minY","maxX","maxY","forEach","s","tool","r","Math","hypot","x1","x0","y1","y0","min","max","width","height","pad","sw","sh","tmp","redrawAll","dataURL","toDataURL","link","downloadPDF","canvas","shapes","sx","sy","length","getContext","drawImage","imgData","pdf","unit","format","addImage","save","loadShapes","arr","map","selected","resize","getBoundingClientRect","window","addEventListener","removeEventListener","context","offsetX","offsetY","c","ctx","w","h","clearRect","fillStyle","fillRect","lc","fc","strokeStyle","lineWidth","beginPath","strokeRect","moveTo","lineTo","stroke","arc","PI","fill","closePath","sides","radius","step","i","ang","px","cos","py","sin","bx0","by0","bw","abs","bh","restore","c2","ctx2","getPos","e","clientX","left","clientY","top","down","pos","includes","move","dx","dy","sides2","rad2","step2","up","push","onKeyDown","ctrlKey","key","pop","shiftKey","toLowerCase","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","_c2","$RefreshReg$"],"sources":["/home/nightsquid/Desktop/GUI II/studyspace/src/components/Canvas.js"],"sourcesContent":["// src/components/Canvas.js\nimport React, {\n    forwardRef,\n    useImperativeHandle,\n    useRef,\n    useEffect,\n    useState\n} from \"react\";\nimport { jsPDF } from \"jspdf\";\nimport \"../css/canvas.css\";\n\nconst Canvas = forwardRef(({ activeTool, lineColor, fillColor }, ref) => {\n    const containerRef = useRef(null);\n    const c1Ref = useRef(null);\n    const c2Ref = useRef(null);\n    const tctx = useRef(null);\n\n    const shapesRef = useRef([]);\n    const redoRef = useRef([]);\n\n    const [isDrawing, setIsDrawing] = useState(false);\n    const [startPos, setStartPos] = useState({ x: 0, y: 0 });\n\n    // 1) Expose export/load/download handlers\n    useImperativeHandle(ref, () => ({\n        exportShapes: () => {\n            const data = JSON.stringify(shapesRef.current, null, 2);\n            const blob = new Blob([data], { type: \"application/json\" });\n            const url = URL.createObjectURL(blob);\n            const a = document.createElement(\"a\");\n            a.href = url; a.download = \"shapes.json\"; a.click();\n            URL.revokeObjectURL(url);\n        },\n        downloadJPEG: () => {\n            // 1) compute minX, minY, maxX, maxY *including* circles’ radii\n            let minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity;\n            shapesRef.current.forEach(s => {\n                if (s.tool === \"circle\" || s.tool === \"polygon\") {\n                    const r = Math.hypot(s.x1 - s.x0, s.y1 - s.y0);\n                    minX = Math.min(minX, s.x0 - r);\n                    maxX = Math.max(maxX, s.x0 + r);\n                    minY = Math.min(minY, s.y0 - r);\n                    maxY = Math.max(maxY, s.y0 + r);\n                } else {\n                    minX = Math.min(minX, s.x0, s.x1);\n                    maxX = Math.max(maxX, s.x0, s.x1);\n                    minY = Math.min(minY, s.y0, s.y1);\n                    maxY = Math.max(maxY, s.y0, s.y1);\n                }\n            });\n\n            if (minX === Infinity) {\n                // no shapes — just default to whole UI canvas\n                minX = 0; minY = 0;\n                maxX = c1Ref.current.width;\n                maxY = c1Ref.current.height;\n            }\n\n            const pad = 20;\n            minX = Math.max(0, minX - pad);\n            minY = Math.max(0, minY - pad);\n            maxX = Math.min(c1Ref.current.width, maxX + pad);\n            maxY = Math.min(c1Ref.current.height, maxY + pad);\n\n            const sw = maxX - minX;\n            const sh = maxY - minY;\n\n            // 2) new offscreen canvas\n            const tmp = document.createElement(\"canvas\");\n            tmp.width = sw;\n            tmp.height = sh;\n            const tctx = useRef(null);\n\n            // 3) replay draw logic into tmp, offset by -minX, -minY\n            redrawAll(tctx, -minX, -minY);\n\n            // 4) export\n            const dataURL = tmp.toDataURL(\"image/jpeg\", 1.0);\n            const link = document.createElement(\"a\");\n            link.href = dataURL;\n            link.download = \"shapes.jpg\";\n            link.click();\n        },\n        downloadPDF: () => {\n            const canvas = c1Ref.current;\n            const shapes = shapesRef.current;\n\n            // same crop logic\n            let sx = 0, sy = 0, sw = canvas.width, sh = canvas.height;\n            if (shapes.length) {\n                let minX = Infinity, minY = Infinity;\n                let maxX = -Infinity, maxY = -Infinity;\n                shapes.forEach(s => {\n                    minX = Math.min(minX, s.x0, s.x1);\n                    minY = Math.min(minY, s.y0, s.y1);\n                    maxX = Math.max(maxX, s.x0, s.x1);\n                    maxY = Math.max(maxY, s.y0, s.y1);\n                });\n                sx = minX;\n                sy = minY;\n                sw = maxX - minX;\n                sh = maxY - minY;\n            }\n\n            // offscreen crop\n            const tmp = document.createElement(\"canvas\");\n            tmp.width = sw;\n            tmp.height = sh;\n            const tctx = tmp.getContext(\"2d\");\n            tctx.drawImage(canvas, sx, sy, sw, sh, 0, 0, sw, sh);\n\n            // export to PDF\n            const imgData = tmp.toDataURL(\"image/jpeg\", 1.0);\n            const pdf = new jsPDF({ unit: \"px\", format: [sw, sh] });\n            pdf.addImage(imgData, \"JPEG\", 0, 0, sw, sh);\n            pdf.save(\"shapes.pdf\");\n        },\n        loadShapes: (arr) => {\n            shapesRef.current = arr.map(s => ({ ...s, selected: false }));\n            redrawAll();\n        }\n    }));\n\n    // 2) Resize loop: keep canvas internal size in sync with CSS size\n    useEffect(() => {\n        const resize = () => {\n            const { width, height } = containerRef.current.getBoundingClientRect();\n            c1Ref.current.width = width;\n            c1Ref.current.height = height;\n            c2Ref.current.width = width;\n            c2Ref.current.height = height;\n            redrawAll();\n        };\n        resize();\n        window.addEventListener(\"resize\", resize);\n        return () => window.removeEventListener(\"resize\", resize);\n    }, []);\n\n    // 3) Redraw everything (with baked-in background)\n    function redrawAll(context = c1Ref, offsetX = 0, offsetY = 0) {\n        const c = context.current;\n        const ctx = c.getContext(\"2d\")\n        const w = ctx.canvas.width;\n        const h = ctx.canvas.height;\n\n        // 1) clear & paint background\n        ctx.clearRect(0, 0, w, h);\n        ctx.fillStyle = \"#979797\";\n        ctx.fillRect(0, 0, w, h);\n\n        // 2) draw each shape, offset by offsetX/offsetY\n        shapesRef.current.forEach(s => {\n            const lc = s.lineColor || lineColor;\n            const fc = s.fillColor || fillColor;\n            ctx.save();\n            ctx.strokeStyle = lc;\n            ctx.fillStyle = fc;\n            ctx.lineWidth = 1;\n            ctx.beginPath();\n\n            const x0 = s.x0 + offsetX;\n            const y0 = s.y0 + offsetY;\n            const x1 = s.x1 + offsetX;\n            const y1 = s.y1 + offsetY;\n\n            switch (s.tool) {\n                case \"square\":\n                    ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n                    ctx.strokeRect(x0, y0, x1 - x0, y1 - y0);\n                    break;\n\n                case \"line\":\n                    ctx.moveTo(x0, y0);\n                    ctx.lineTo(x1, y1);\n                    ctx.stroke();\n                    break;\n\n                case \"circle\":\n                    const r = Math.hypot(s.x1 - s.x0, s.y1 - s.y0);\n                    ctx.arc(x0, y0, r, 0, 2 * Math.PI);\n                    ctx.fill();\n                    ctx.stroke();\n                    break;\n\n                case \"triangle\":\n                    ctx.moveTo(x0, y0);\n                    ctx.lineTo(x1, y0);\n                    ctx.lineTo((x0 + x1) / 2, y1);\n                    ctx.closePath();\n                    ctx.fill();\n                    ctx.stroke();\n                    break;\n\n                case \"polygon\":\n                    const sides = 5;\n                    const radius = Math.hypot(s.x1 - s.x0, s.y1 - s.y0);\n                    const step = (2 * Math.PI) / sides;\n                    for (let i = 0; i < sides; i++) {\n                        const ang = i * step - Math.PI / 2;\n                        const px = s.x0 + radius * Math.cos(ang) + offsetX;\n                        const py = s.y0 + radius * Math.sin(ang) + offsetY;\n                        i === 0 ? ctx.moveTo(px, py) : ctx.lineTo(px, py);\n                    }\n                    ctx.closePath();\n                    ctx.fill();\n                    ctx.stroke();\n                    break;\n            }\n\n            // 3) if shape is selected, draw red bounding box\n            if (s.selected) {\n                const bx0 = Math.min(s.x0, s.x1) + offsetX;\n                const by0 = Math.min(s.y0, s.y1) + offsetY;\n                const bw = Math.abs(s.x1 - s.x0);\n                const bh = Math.abs(s.y1 - s.y0);\n                ctx.strokeStyle = \"red\";\n                ctx.strokeRect(bx0, by0, bw, bh);\n            }\n\n            ctx.restore();\n        });\n    }\n\n    // 4) Drawing & selection logic\n    useEffect(() => {\n        const c2 = c2Ref.current;\n        const ctx2 = c2.getContext(\"2d\");\n\n        const getPos = e => {\n            const r = c2.getBoundingClientRect();\n            return { x: e.clientX - r.left, y: e.clientY - r.top };\n        };\n\n        const down = e => {\n            if (activeTool === \"cursor\") {\n                const pos = getPos(e);\n                shapesRef.current.forEach(s => s.selected = false);\n                for (let i = shapesRef.current.length - 1; i >= 0; i--) {\n                    const s = shapesRef.current[i],\n                        minX = Math.min(s.x0, s.x1), maxX = Math.max(s.x0, s.x1),\n                        minY = Math.min(s.y0, s.y1), maxY = Math.max(s.y0, s.y1);\n                    if (pos.x >= minX && pos.x <= maxX && pos.y >= minY && pos.y <= maxY) {\n                        s.selected = true; break;\n                    }\n                }\n                redrawAll();\n                return;\n            }\n            if (![\"square\", \"line\", \"circle\", \"triangle\", \"polygon\"].includes(activeTool)) return;\n            setStartPos(getPos(e));\n            setIsDrawing(true);\n        };\n\n        const move = e => {\n            if (!isDrawing) return;\n            const { x, y } = getPos(e);\n            const dx = x - startPos.x, dy = y - startPos.y;\n            ctx2.clearRect(0, 0, c2.width, c2.height);\n            ctx2.strokeStyle = lineColor;\n            ctx2.beginPath();\n            switch (activeTool) {\n                case \"square\":\n                    ctx2.strokeRect(startPos.x, startPos.y, dx, dy);\n                    break;\n                case \"line\":\n                    ctx2.moveTo(startPos.x, startPos.y);\n                    ctx2.lineTo(x, y);\n                    ctx2.stroke();\n                    break;\n                case \"circle\":\n                    ctx2.arc(startPos.x, startPos.y, Math.hypot(dx, dy), 0, 2 * Math.PI);\n                    ctx2.stroke();\n                    break;\n                case \"triangle\":\n                    ctx2.moveTo(startPos.x, startPos.y);\n                    ctx2.lineTo(startPos.x + dx, startPos.y);\n                    ctx2.lineTo(startPos.x + dx / 2, startPos.y + dy);\n                    ctx2.closePath();\n                    ctx2.stroke();\n                    break;\n                case \"polygon\":\n                    const sides2 = 5, rad2 = Math.hypot(dx, dy), step2 = 2 * Math.PI / sides2;\n                    for (let i = 0; i < sides2; i++) {\n                        const ang = i * step2 - Math.PI / 2,\n                            px = startPos.x + rad2 * Math.cos(ang),\n                            py = startPos.y + rad2 * Math.sin(ang);\n                        i === 0 ? ctx2.moveTo(px, py) : ctx2.lineTo(px, py);\n                    }\n                    ctx2.closePath();\n                    ctx2.stroke();\n                    break;\n            }\n        };\n\n        const up = e => {\n            if (!isDrawing) return;\n            const { x, y } = getPos(e);\n            shapesRef.current.push({\n                tool: activeTool,\n                x0: startPos.x, y0: startPos.y,\n                x1: x, y1: y,\n                lineColor, fillColor,\n                selected: false\n            });\n            redrawAll();\n            ctx2.clearRect(0, 0, c2.width, c2.height);\n            setIsDrawing(false);\n        };\n\n        const onKeyDown = e => {\n            if (e.ctrlKey && e.key === \"z\" && shapesRef.current.length) {\n                redoRef.current.push(shapesRef.current.pop());\n                redrawAll();\n            }\n            else if (e.ctrlKey && e.shiftKey && e.key.toLowerCase() === \"z\" && redoRef.current.length) {\n                shapesRef.current.push(redoRef.current.pop());\n                redrawAll();\n            }\n        };\n\n        c2.addEventListener(\"mousedown\", down);\n        c2.addEventListener(\"mousemove\", move);\n        c2.addEventListener(\"mouseup\", up);\n        window.addEventListener(\"keydown\", onKeyDown);\n        return () => {\n            c2.removeEventListener(\"mousedown\", down);\n            c2.removeEventListener(\"mousemove\", move);\n            c2.removeEventListener(\"mouseup\", up);\n            window.removeEventListener(\"keydown\", onKeyDown);\n        };\n    }, [activeTool, isDrawing, startPos, lineColor, fillColor]);\n\n    return (\n        <div ref={containerRef} className=\"canvas-container\">\n            <canvas ref={c1Ref} />\n            <canvas ref={c2Ref} style={{ backgroundColor: \"transparent\" }} />\n        </div>\n    );\n});\n\nexport default Canvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}