{"ast":null,"code":"var _jsxFileName = \"/home/nightsquid/Desktop/GUI II/studyspace/src/components/Canvas.js\",\n  _s = $RefreshSig$();\n// src/components/Canvas.js\nimport React, { forwardRef, useImperativeHandle, useRef, useEffect, useState } from \"react\";\nimport { jsPDF } from \"jspdf\";\nimport \"../css/canvas.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = /*#__PURE__*/_s(/*#__PURE__*/forwardRef(_c = _s(({\n  activeTool,\n  lineColor,\n  fillColor\n}, ref) => {\n  _s();\n  const containerRef = useRef(null);\n  const c1Ref = useRef(null);\n  const c2Ref = useRef(null);\n  const shapesRef = useRef([]);\n  const redoRef = useRef([]);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [startPos, setStartPos] = useState({\n    x: 0,\n    y: 0\n  });\n\n  // 1) Expose export/load/download handlers\n  useImperativeHandle(ref, () => ({\n    exportShapes: () => {\n      const data = JSON.stringify(shapesRef.current, null, 2);\n      const blob = new Blob([data], {\n        type: \"application/json\"\n      });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = \"shapes.json\";\n      a.click();\n      URL.revokeObjectURL(url);\n    },\n    downloadJPEG: () => {\n      const canvas = c1Ref.current;\n      const shapes = shapesRef.current;\n\n      // 1) compute bounds\n      let minX = Infinity,\n        minY = Infinity;\n      let maxX = -Infinity,\n        maxY = -Infinity;\n      shapes.forEach(s => {\n        let sMinX, sMinY, sMaxX, sMaxY;\n        if (s.tool === \"circle\" || s.tool === \"polygon\") {\n          const cx = s.x0,\n            cy = s.y0;\n          const r = Math.hypot(s.x1 - s.x0, s.y1 - s.y0);\n          sMinX = cx - r;\n          sMaxX = cx + r;\n          sMinY = cy - r;\n          sMaxY = cy + r;\n        } else {\n          sMinX = Math.min(s.x0, s.x1);\n          sMaxX = Math.max(s.x0, s.x1);\n          sMinY = Math.min(s.y0, s.y1);\n          sMaxY = Math.max(s.y0, s.y1);\n        }\n        minX = Math.min(minX, sMinX);\n        minY = Math.min(minY, sMinY);\n        maxX = Math.max(maxX, sMaxX);\n        maxY = Math.max(maxY, sMaxY);\n      });\n\n      // if no shapes, fall back to full canvas\n      if (minX === Infinity) {\n        minX = 0;\n        minY = 0;\n        maxX = canvas.width;\n        maxY = canvas.height;\n      }\n\n      // 2) add padding & clamp\n      const pad = 20;\n      minX = Math.max(0, minX - pad);\n      minY = Math.max(0, minY - pad);\n      maxX = Math.min(canvas.width, maxX + pad);\n      maxY = Math.min(canvas.height, maxY + pad);\n      const sw = maxX - minX;\n      const sh = maxY - minY;\n\n      // 3) crop into temp canvas\n      const tmp = document.createElement(\"canvas\");\n      tmp.width = sw;\n      tmp.height = sh;\n      const tctx = tmp.getContext(\"2d\");\n      tctx.fillStyle = \"#979797\";\n      tctx.fillRect(0, 0, sw, sh);\n      tctx.drawImage(canvas, minX, minY, sw, sh, 0, 0, sw, sh);\n\n      // 4) export JPEG\n      const dataURL = tmp.toDataURL(\"image/jpeg\", 1.0);\n      const link = document.createElement(\"a\");\n      link.href = dataURL;\n      link.download = \"shapes.jpg\";\n      link.click();\n    },\n    downloadPDF: () => {\n      const canvas = c1Ref.current;\n      const shapes = shapesRef.current;\n\n      // same bounding logic\n      let minX = Infinity,\n        minY = Infinity;\n      let maxX = -Infinity,\n        maxY = -Infinity;\n      shapes.forEach(s => {\n        let sMinX, sMinY, sMaxX, sMaxY;\n        if (s.tool === \"circle\" || s.tool === \"polygon\") {\n          const cx = s.x0,\n            cy = s.y0;\n          const r = Math.hypot(s.x1 - s.x0, s.y1 - s.y0);\n          sMinX = cx - r;\n          sMaxX = cx + r;\n          sMinY = cy - r;\n          sMaxY = cy + r;\n        } else {\n          sMinX = Math.min(s.x0, s.x1);\n          sMaxX = Math.max(s.x0, s.x1);\n          sMinY = Math.min(s.y0, s.y1);\n          sMaxY = Math.max(s.y0, s.y1);\n        }\n        minX = Math.min(minX, sMinX);\n        minY = Math.min(minY, sMinY);\n        maxX = Math.max(maxX, sMaxX);\n        maxY = Math.max(maxY, sMaxY);\n      });\n      if (minX === Infinity) {\n        minX = 0;\n        minY = 0;\n        maxX = canvas.width;\n        maxY = canvas.height;\n      }\n      const pad = 20;\n      minX = Math.max(0, minX - pad);\n      minY = Math.max(0, minY - pad);\n      maxX = Math.min(canvas.width, maxX + pad);\n      maxY = Math.min(canvas.height, maxY + pad);\n      const sw = maxX - minX;\n      const sh = maxY - minY;\n      const tmp = document.createElement(\"canvas\");\n      tmp.width = sw;\n      tmp.height = sh;\n      const tctx = tmp.getContext(\"2d\");\n      tctx.fillStyle = \"#979797\";\n      tctx.fillRect(0, 0, sw, sh);\n      tctx.drawImage(canvas, minX, minY, sw, sh, 0, 0, sw, sh);\n      const imgData = tmp.toDataURL(\"image/jpeg\", 1.0);\n      const pdf = new jsPDF({\n        unit: \"px\",\n        format: [sw, sh]\n      });\n      pdf.addImage(imgData, \"JPEG\", 0, 0, sw, sh);\n      pdf.save(\"shapes.pdf\");\n    },\n    loadShapes: arr => {\n      shapesRef.current = arr.map(s => ({\n        ...s,\n        selected: false\n      }));\n      redrawAll();\n    }\n  }));\n\n  // 2) Resize loop: keep canvas internal size in sync with CSS size\n  useEffect(() => {\n    const resize = () => {\n      const {\n        width,\n        height\n      } = containerRef.current.getBoundingClientRect();\n      c1Ref.current.width = width;\n      c1Ref.current.height = height;\n      c2Ref.current.width = width;\n      c2Ref.current.height = height;\n      redrawAll();\n    };\n    resize();\n    window.addEventListener(\"resize\", resize);\n    return () => window.removeEventListener(\"resize\", resize);\n  }, []);\n\n  // 3) Redraw everything (with baked-in background)\n  const redrawAll = () => {\n    const c = c1Ref.current;\n    const ctx = c.getContext(\"2d\");\n    ctx.clearRect(0, 0, c.width, c.height);\n    shapesRef.current.forEach(s => {\n      const {\n        tool,\n        x0,\n        y0,\n        x1,\n        y1,\n        lineColor: lc,\n        fillColor: fc,\n        selected\n      } = s;\n      ctx.save();\n      ctx.strokeStyle = lc || lineColor;\n      ctx.fillStyle = fc || fillColor;\n      ctx.lineWidth = 1;\n      ctx.beginPath();\n      switch (tool) {\n        case \"square\":\n          ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n          ctx.strokeRect(x0, y0, x1 - x0, y1 - y0);\n          break;\n        case \"line\":\n          ctx.moveTo(x0, y0);\n          ctx.lineTo(x1, y1);\n          ctx.stroke();\n          break;\n        case \"circle\":\n          const r = Math.hypot(x1 - x0, y1 - y0);\n          ctx.arc(x0, y0, r, 0, 2 * Math.PI);\n          ctx.fill();\n          ctx.stroke();\n          break;\n        case \"triangle\":\n          ctx.moveTo(x0, y0);\n          ctx.lineTo(x1, y0);\n          ctx.lineTo((x0 + x1) / 2, y1);\n          ctx.closePath();\n          ctx.fill();\n          ctx.stroke();\n          break;\n        case \"polygon\":\n          const sides = 5,\n            rad = Math.hypot(x1 - x0, y1 - y0),\n            step = 2 * Math.PI / sides;\n          for (let i = 0; i < sides; i++) {\n            const ang = i * step - Math.PI / 2,\n              px = x0 + rad * Math.cos(ang),\n              py = y0 + rad * Math.sin(ang);\n            i === 0 ? ctx.moveTo(px, py) : ctx.lineTo(px, py);\n          }\n          ctx.closePath();\n          ctx.fill();\n          ctx.stroke();\n          break;\n      }\n      if (selected) {\n        ctx.strokeStyle = \"red\";\n        ctx.strokeRect(Math.min(x0, x1), Math.min(y0, y1), Math.abs(x1 - x0), Math.abs(y1 - y0));\n      }\n      ctx.restore();\n    });\n  };\n\n  // 4) Drawing & selection logic\n  useEffect(() => {\n    const c2 = c2Ref.current;\n    const ctx2 = c2.getContext(\"2d\");\n    const getPos = e => {\n      const r = c2.getBoundingClientRect();\n      return {\n        x: e.clientX - r.left,\n        y: e.clientY - r.top\n      };\n    };\n    const down = e => {\n      if (activeTool === \"cursor\") {\n        const pos = getPos(e);\n        shapesRef.current.forEach(s => s.selected = false);\n        for (let i = shapesRef.current.length - 1; i >= 0; i--) {\n          const s = shapesRef.current[i],\n            minX = Math.min(s.x0, s.x1),\n            maxX = Math.max(s.x0, s.x1),\n            minY = Math.min(s.y0, s.y1),\n            maxY = Math.max(s.y0, s.y1);\n          if (pos.x >= minX && pos.x <= maxX && pos.y >= minY && pos.y <= maxY) {\n            s.selected = true;\n            break;\n          }\n        }\n        redrawAll();\n        return;\n      }\n      if (![\"square\", \"line\", \"circle\", \"triangle\", \"polygon\"].includes(activeTool)) return;\n      setStartPos(getPos(e));\n      setIsDrawing(true);\n    };\n    const move = e => {\n      if (!isDrawing) return;\n      const {\n        x,\n        y\n      } = getPos(e);\n      const dx = x - startPos.x,\n        dy = y - startPos.y;\n      ctx2.clearRect(0, 0, c2.width, c2.height);\n      ctx2.strokeStyle = lineColor;\n      ctx2.beginPath();\n      switch (activeTool) {\n        case \"square\":\n          ctx2.strokeRect(startPos.x, startPos.y, dx, dy);\n          break;\n        case \"line\":\n          ctx2.moveTo(startPos.x, startPos.y);\n          ctx2.lineTo(x, y);\n          ctx2.stroke();\n          break;\n        case \"circle\":\n          ctx2.arc(startPos.x, startPos.y, Math.hypot(dx, dy), 0, 2 * Math.PI);\n          ctx2.stroke();\n          break;\n        case \"triangle\":\n          ctx2.moveTo(startPos.x, startPos.y);\n          ctx2.lineTo(startPos.x + dx, startPos.y);\n          ctx2.lineTo(startPos.x + dx / 2, startPos.y + dy);\n          ctx2.closePath();\n          ctx2.stroke();\n          break;\n        case \"polygon\":\n          const sides2 = 5,\n            rad2 = Math.hypot(dx, dy),\n            step2 = 2 * Math.PI / sides2;\n          for (let i = 0; i < sides2; i++) {\n            const ang = i * step2 - Math.PI / 2,\n              px = startPos.x + rad2 * Math.cos(ang),\n              py = startPos.y + rad2 * Math.sin(ang);\n            i === 0 ? ctx2.moveTo(px, py) : ctx2.lineTo(px, py);\n          }\n          ctx2.closePath();\n          ctx2.stroke();\n          break;\n      }\n    };\n    const up = e => {\n      if (!isDrawing) return;\n      const {\n        x,\n        y\n      } = getPos(e);\n      shapesRef.current.push({\n        tool: activeTool,\n        x0: startPos.x,\n        y0: startPos.y,\n        x1: x,\n        y1: y,\n        lineColor,\n        fillColor,\n        selected: false\n      });\n      redrawAll();\n      ctx2.clearRect(0, 0, c2.width, c2.height);\n      setIsDrawing(false);\n    };\n    const onKeyDown = e => {\n      if (e.ctrlKey && e.key === \"z\" && shapesRef.current.length) {\n        redoRef.current.push(shapesRef.current.pop());\n        redrawAll();\n      } else if (e.ctrlKey && e.shiftKey && e.key.toLowerCase() === \"z\" && redoRef.current.length) {\n        shapesRef.current.push(redoRef.current.pop());\n        redrawAll();\n      }\n    };\n    c2.addEventListener(\"mousedown\", down);\n    c2.addEventListener(\"mousemove\", move);\n    c2.addEventListener(\"mouseup\", up);\n    window.addEventListener(\"keydown\", onKeyDown);\n    return () => {\n      c2.removeEventListener(\"mousedown\", down);\n      c2.removeEventListener(\"mousemove\", move);\n      c2.removeEventListener(\"mouseup\", up);\n      window.removeEventListener(\"keydown\", onKeyDown);\n    };\n  }, [activeTool, isDrawing, startPos, lineColor, fillColor]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    className: \"canvas-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: c1Ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: c2Ref,\n      style: {\n        backgroundColor: \"transparent\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 339,\n    columnNumber: 9\n  }, this);\n}, \"UJLDpA+bOaQrWpjxwsKEiK11vyM=\")), \"UJLDpA+bOaQrWpjxwsKEiK11vyM=\");\n_c2 = Canvas;\nexport default Canvas;\nvar _c, _c2;\n$RefreshReg$(_c, \"Canvas$forwardRef\");\n$RefreshReg$(_c2, \"Canvas\");","map":{"version":3,"names":["React","forwardRef","useImperativeHandle","useRef","useEffect","useState","jsPDF","jsxDEV","_jsxDEV","Canvas","_s","_c","activeTool","lineColor","fillColor","ref","containerRef","c1Ref","c2Ref","shapesRef","redoRef","isDrawing","setIsDrawing","startPos","setStartPos","x","y","exportShapes","data","JSON","stringify","current","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","downloadJPEG","canvas","shapes","minX","Infinity","minY","maxX","maxY","forEach","s","sMinX","sMinY","sMaxX","sMaxY","tool","cx","x0","cy","y0","r","Math","hypot","x1","y1","min","max","width","height","pad","sw","sh","tmp","tctx","getContext","fillStyle","fillRect","drawImage","dataURL","toDataURL","link","downloadPDF","imgData","pdf","unit","format","addImage","save","loadShapes","arr","map","selected","redrawAll","resize","getBoundingClientRect","window","addEventListener","removeEventListener","c","ctx","clearRect","lc","fc","strokeStyle","lineWidth","beginPath","strokeRect","moveTo","lineTo","stroke","arc","PI","fill","closePath","sides","rad","step","i","ang","px","cos","py","sin","abs","restore","c2","ctx2","getPos","e","clientX","left","clientY","top","down","pos","length","includes","move","dx","dy","sides2","rad2","step2","up","push","onKeyDown","ctrlKey","key","pop","shiftKey","toLowerCase","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","_c2","$RefreshReg$"],"sources":["/home/nightsquid/Desktop/GUI II/studyspace/src/components/Canvas.js"],"sourcesContent":["// src/components/Canvas.js\nimport React, {\n    forwardRef,\n    useImperativeHandle,\n    useRef,\n    useEffect,\n    useState\n} from \"react\";\nimport { jsPDF } from \"jspdf\";\nimport \"../css/canvas.css\";\n\nconst Canvas = forwardRef(({ activeTool, lineColor, fillColor }, ref) => {\n    const containerRef = useRef(null);\n    const c1Ref = useRef(null);\n    const c2Ref = useRef(null);\n\n    const shapesRef = useRef([]);\n    const redoRef = useRef([]);\n\n    const [isDrawing, setIsDrawing] = useState(false);\n    const [startPos, setStartPos] = useState({ x: 0, y: 0 });\n\n    // 1) Expose export/load/download handlers\n    useImperativeHandle(ref, () => ({\n        exportShapes: () => {\n            const data = JSON.stringify(shapesRef.current, null, 2);\n            const blob = new Blob([data], { type: \"application/json\" });\n            const url = URL.createObjectURL(blob);\n            const a = document.createElement(\"a\");\n            a.href = url; a.download = \"shapes.json\"; a.click();\n            URL.revokeObjectURL(url);\n        },\n        downloadJPEG: () => {\n            const canvas = c1Ref.current;\n            const shapes = shapesRef.current;\n\n            // 1) compute bounds\n            let minX = Infinity, minY = Infinity;\n            let maxX = -Infinity, maxY = -Infinity;\n            shapes.forEach(s => {\n                let sMinX, sMinY, sMaxX, sMaxY;\n\n                if (s.tool === \"circle\" || s.tool === \"polygon\") {\n                    const cx = s.x0, cy = s.y0;\n                    const r = Math.hypot(s.x1 - s.x0, s.y1 - s.y0);\n                    sMinX = cx - r; sMaxX = cx + r;\n                    sMinY = cy - r; sMaxY = cy + r;\n                } else {\n                    sMinX = Math.min(s.x0, s.x1);\n                    sMaxX = Math.max(s.x0, s.x1);\n                    sMinY = Math.min(s.y0, s.y1);\n                    sMaxY = Math.max(s.y0, s.y1);\n                }\n\n                minX = Math.min(minX, sMinX);\n                minY = Math.min(minY, sMinY);\n                maxX = Math.max(maxX, sMaxX);\n                maxY = Math.max(maxY, sMaxY);\n            });\n\n            // if no shapes, fall back to full canvas\n            if (minX === Infinity) {\n                minX = 0; minY = 0;\n                maxX = canvas.width; maxY = canvas.height;\n            }\n\n            // 2) add padding & clamp\n            const pad = 20;\n            minX = Math.max(0, minX - pad);\n            minY = Math.max(0, minY - pad);\n            maxX = Math.min(canvas.width, maxX + pad);\n            maxY = Math.min(canvas.height, maxY + pad);\n\n            const sw = maxX - minX;\n            const sh = maxY - minY;\n\n            // 3) crop into temp canvas\n            const tmp = document.createElement(\"canvas\");\n            tmp.width = sw;\n            tmp.height = sh;\n            const tctx = tmp.getContext(\"2d\");\n            tctx.fillStyle = \"#979797\";\n            tctx.fillRect(0, 0, sw, sh);\n            tctx.drawImage(canvas,\n                minX, minY, sw, sh,\n                0, 0, sw, sh\n            );\n\n            // 4) export JPEG\n            const dataURL = tmp.toDataURL(\"image/jpeg\", 1.0);\n            const link = document.createElement(\"a\");\n            link.href = dataURL;\n            link.download = \"shapes.jpg\";\n            link.click();\n        },\n\n        downloadPDF: () => {\n            const canvas = c1Ref.current;\n            const shapes = shapesRef.current;\n\n            // same bounding logic\n            let minX = Infinity, minY = Infinity;\n            let maxX = -Infinity, maxY = -Infinity;\n            shapes.forEach(s => {\n                let sMinX, sMinY, sMaxX, sMaxY;\n                if (s.tool === \"circle\" || s.tool === \"polygon\") {\n                    const cx = s.x0, cy = s.y0;\n                    const r = Math.hypot(s.x1 - s.x0, s.y1 - s.y0);\n                    sMinX = cx - r; sMaxX = cx + r;\n                    sMinY = cy - r; sMaxY = cy + r;\n                } else {\n                    sMinX = Math.min(s.x0, s.x1);\n                    sMaxX = Math.max(s.x0, s.x1);\n                    sMinY = Math.min(s.y0, s.y1);\n                    sMaxY = Math.max(s.y0, s.y1);\n                }\n                minX = Math.min(minX, sMinX);\n                minY = Math.min(minY, sMinY);\n                maxX = Math.max(maxX, sMaxX);\n                maxY = Math.max(maxY, sMaxY);\n            });\n            if (minX === Infinity) {\n                minX = 0; minY = 0;\n                maxX = canvas.width; maxY = canvas.height;\n            }\n            const pad = 20;\n            minX = Math.max(0, minX - pad);\n            minY = Math.max(0, minY - pad);\n            maxX = Math.min(canvas.width, maxX + pad);\n            maxY = Math.min(canvas.height, maxY + pad);\n\n            const sw = maxX - minX;\n            const sh = maxY - minY;\n\n            const tmp = document.createElement(\"canvas\");\n            tmp.width = sw;\n            tmp.height = sh;\n            const tctx = tmp.getContext(\"2d\");\n            tctx.fillStyle = \"#979797\";\n            tctx.fillRect(0, 0, sw, sh);\n            tctx.drawImage(canvas,\n                minX, minY, sw, sh,\n                0, 0, sw, sh\n            );\n\n            const imgData = tmp.toDataURL(\"image/jpeg\", 1.0);\n            const pdf = new jsPDF({ unit: \"px\", format: [sw, sh] });\n            pdf.addImage(imgData, \"JPEG\", 0, 0, sw, sh);\n            pdf.save(\"shapes.pdf\");\n        },\n        loadShapes: (arr) => {\n            shapesRef.current = arr.map(s => ({ ...s, selected: false }));\n            redrawAll();\n        }\n    }));\n\n    // 2) Resize loop: keep canvas internal size in sync with CSS size\n    useEffect(() => {\n        const resize = () => {\n            const { width, height } = containerRef.current.getBoundingClientRect();\n            c1Ref.current.width = width;\n            c1Ref.current.height = height;\n            c2Ref.current.width = width;\n            c2Ref.current.height = height;\n            redrawAll();\n        };\n        resize();\n        window.addEventListener(\"resize\", resize);\n        return () => window.removeEventListener(\"resize\", resize);\n    }, []);\n\n    // 3) Redraw everything (with baked-in background)\n    const redrawAll = () => {\n        const c = c1Ref.current;\n        const ctx = c.getContext(\"2d\");\n        ctx.clearRect(0, 0, c.width, c.height);\n        shapesRef.current.forEach(s => {\n            const { tool, x0, y0, x1, y1, lineColor: lc, fillColor: fc, selected } = s;\n            ctx.save();\n            ctx.strokeStyle = lc || lineColor;\n            ctx.fillStyle = fc || fillColor;\n            ctx.lineWidth = 1;\n            ctx.beginPath();\n            switch (tool) {\n                case \"square\":\n                    ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n                    ctx.strokeRect(x0, y0, x1 - x0, y1 - y0);\n                    break;\n                case \"line\":\n                    ctx.moveTo(x0, y0); ctx.lineTo(x1, y1); ctx.stroke();\n                    break;\n                case \"circle\":\n                    const r = Math.hypot(x1 - x0, y1 - y0);\n                    ctx.arc(x0, y0, r, 0, 2 * Math.PI);\n                    ctx.fill(); ctx.stroke();\n                    break;\n                case \"triangle\":\n                    ctx.moveTo(x0, y0);\n                    ctx.lineTo(x1, y0);\n                    ctx.lineTo((x0 + x1) / 2, y1);\n                    ctx.closePath();\n                    ctx.fill(); ctx.stroke();\n                    break;\n                case \"polygon\":\n                    const sides = 5, rad = Math.hypot(x1 - x0, y1 - y0), step = 2 * Math.PI / sides;\n                    for (let i = 0; i < sides; i++) {\n                        const ang = i * step - Math.PI / 2,\n                            px = x0 + rad * Math.cos(ang),\n                            py = y0 + rad * Math.sin(ang);\n                        i === 0 ? ctx.moveTo(px, py) : ctx.lineTo(px, py);\n                    }\n                    ctx.closePath();\n                    ctx.fill(); ctx.stroke();\n                    break;\n            }\n            if (selected) {\n                ctx.strokeStyle = \"red\";\n                ctx.strokeRect(\n                    Math.min(x0, x1),\n                    Math.min(y0, y1),\n                    Math.abs(x1 - x0),\n                    Math.abs(y1 - y0)\n                );\n            }\n            ctx.restore();\n        });\n    };\n\n    // 4) Drawing & selection logic\n    useEffect(() => {\n        const c2 = c2Ref.current;\n        const ctx2 = c2.getContext(\"2d\");\n\n        const getPos = e => {\n            const r = c2.getBoundingClientRect();\n            return { x: e.clientX - r.left, y: e.clientY - r.top };\n        };\n\n        const down = e => {\n            if (activeTool === \"cursor\") {\n                const pos = getPos(e);\n                shapesRef.current.forEach(s => s.selected = false);\n                for (let i = shapesRef.current.length - 1; i >= 0; i--) {\n                    const s = shapesRef.current[i],\n                        minX = Math.min(s.x0, s.x1), maxX = Math.max(s.x0, s.x1),\n                        minY = Math.min(s.y0, s.y1), maxY = Math.max(s.y0, s.y1);\n                    if (pos.x >= minX && pos.x <= maxX && pos.y >= minY && pos.y <= maxY) {\n                        s.selected = true; break;\n                    }\n                }\n                redrawAll();\n                return;\n            }\n            if (![\"square\", \"line\", \"circle\", \"triangle\", \"polygon\"].includes(activeTool)) return;\n            setStartPos(getPos(e));\n            setIsDrawing(true);\n        };\n\n        const move = e => {\n            if (!isDrawing) return;\n            const { x, y } = getPos(e);\n            const dx = x - startPos.x, dy = y - startPos.y;\n            ctx2.clearRect(0, 0, c2.width, c2.height);\n            ctx2.strokeStyle = lineColor;\n            ctx2.beginPath();\n            switch (activeTool) {\n                case \"square\":\n                    ctx2.strokeRect(startPos.x, startPos.y, dx, dy);\n                    break;\n                case \"line\":\n                    ctx2.moveTo(startPos.x, startPos.y);\n                    ctx2.lineTo(x, y);\n                    ctx2.stroke();\n                    break;\n                case \"circle\":\n                    ctx2.arc(startPos.x, startPos.y, Math.hypot(dx, dy), 0, 2 * Math.PI);\n                    ctx2.stroke();\n                    break;\n                case \"triangle\":\n                    ctx2.moveTo(startPos.x, startPos.y);\n                    ctx2.lineTo(startPos.x + dx, startPos.y);\n                    ctx2.lineTo(startPos.x + dx / 2, startPos.y + dy);\n                    ctx2.closePath();\n                    ctx2.stroke();\n                    break;\n                case \"polygon\":\n                    const sides2 = 5, rad2 = Math.hypot(dx, dy), step2 = 2 * Math.PI / sides2;\n                    for (let i = 0; i < sides2; i++) {\n                        const ang = i * step2 - Math.PI / 2,\n                            px = startPos.x + rad2 * Math.cos(ang),\n                            py = startPos.y + rad2 * Math.sin(ang);\n                        i === 0 ? ctx2.moveTo(px, py) : ctx2.lineTo(px, py);\n                    }\n                    ctx2.closePath();\n                    ctx2.stroke();\n                    break;\n            }\n        };\n\n        const up = e => {\n            if (!isDrawing) return;\n            const { x, y } = getPos(e);\n            shapesRef.current.push({\n                tool: activeTool,\n                x0: startPos.x, y0: startPos.y,\n                x1: x, y1: y,\n                lineColor, fillColor,\n                selected: false\n            });\n            redrawAll();\n            ctx2.clearRect(0, 0, c2.width, c2.height);\n            setIsDrawing(false);\n        };\n\n        const onKeyDown = e => {\n            if (e.ctrlKey && e.key === \"z\" && shapesRef.current.length) {\n                redoRef.current.push(shapesRef.current.pop());\n                redrawAll();\n            }\n            else if (e.ctrlKey && e.shiftKey && e.key.toLowerCase() === \"z\" && redoRef.current.length) {\n                shapesRef.current.push(redoRef.current.pop());\n                redrawAll();\n            }\n        };\n\n        c2.addEventListener(\"mousedown\", down);\n        c2.addEventListener(\"mousemove\", move);\n        c2.addEventListener(\"mouseup\", up);\n        window.addEventListener(\"keydown\", onKeyDown);\n        return () => {\n            c2.removeEventListener(\"mousedown\", down);\n            c2.removeEventListener(\"mousemove\", move);\n            c2.removeEventListener(\"mouseup\", up);\n            window.removeEventListener(\"keydown\", onKeyDown);\n        };\n    }, [activeTool, isDrawing, startPos, lineColor, fillColor]);\n\n    return (\n        <div ref={containerRef} className=\"canvas-container\">\n            <canvas ref={c1Ref} />\n            <canvas ref={c2Ref} style={{ backgroundColor: \"transparent\" }} />\n        </div>\n    );\n});\n\nexport default Canvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}