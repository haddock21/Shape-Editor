{"ast":null,"code":"var _jsxFileName = \"/home/nightsquid/Desktop/GUI II/studyspace/src/components/Canvas.js\",\n  _s = $RefreshSig$();\n// src/components/Canvas.js\nimport React, { useRef, useEffect, useState, forwardRef, useImperativeHandle } from \"react\";\nimport \"../css/canvas.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = /*#__PURE__*/_s(/*#__PURE__*/forwardRef(_c = _s(({\n  activeTool\n}, ref) => {\n  _s();\n  const canvas1Ref = useRef(null);\n  const canvas2Ref = useRef(null);\n  const shapesRef = useRef([]);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [startPos, setStartPos] = useState({\n    x: 0,\n    y: 0\n  });\n\n  // expose exportShapes to parent\n  useImperativeHandle(ref, () => ({\n    exportShapes: () => {\n      const dataStr = JSON.stringify(shapesRef.current, null, 2);\n      const blob = new Blob([dataStr], {\n        type: \"application/json\"\n      });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = \"shapes.json\";\n      a.click();\n      URL.revokeObjectURL(url);\n    }\n  }));\n  const redrawAll = () => {\n    const ctx = canvas1Ref.current.getContext(\"2d\");\n    ctx.clearRect(0, 0, 600, 700);\n    shapesRef.current.forEach(s => {\n      ctx.beginPath();\n      ctx.strokeStyle = s.selected ? \"red\" : \"#000\";\n      const {\n        tool,\n        x0,\n        y0,\n        x1,\n        y1\n      } = s;\n      switch (tool) {\n        case \"square\":\n          ctx.strokeRect(x0, y0, x1 - x0, y1 - y0);\n          break;\n        case \"line\":\n          ctx.moveTo(x0, y0);\n          ctx.lineTo(x1, y1);\n          ctx.stroke();\n          break;\n        case \"circle\":\n          ctx.arc(x0, y0, Math.hypot(x1 - x0, y1 - y0), 0, 2 * Math.PI);\n          ctx.stroke();\n          break;\n        case \"triangle\":\n          ctx.moveTo(x0, y0);\n          ctx.lineTo(x1, y0);\n          ctx.lineTo((x0 + x1) / 2, y1);\n          ctx.closePath();\n          ctx.stroke();\n          break;\n        case \"polygon\":\n          const sides = 5,\n            radius = Math.hypot(x1 - x0, y1 - y0),\n            step = 2 * Math.PI / sides;\n          for (let i = 0; i < sides; i++) {\n            const ang = i * step - Math.PI / 2;\n            const px = x0 + radius * Math.cos(ang),\n              py = y0 + radius * Math.sin(ang);\n            i === 0 ? ctx.moveTo(px, py) : ctx.lineTo(px, py);\n          }\n          ctx.closePath();\n          ctx.stroke();\n          break;\n        default:\n          break;\n      }\n    });\n  };\n  useEffect(() => {\n    const c2 = canvas2Ref.current;\n    const ctx2 = c2.getContext(\"2d\");\n    const getCoords = e => {\n      const r = c2.getBoundingClientRect();\n      return {\n        x: e.clientX - r.left,\n        y: e.clientY - r.top\n      };\n    };\n    const onMouseDown = e => {\n      if (activeTool === \"cursor\") {\n        // ... selection logic (unchanged) ...\n        return;\n      }\n      if (![\"square\", \"line\", \"circle\", \"triangle\", \"polygon\"].includes(activeTool)) return;\n      setStartPos(getCoords(e));\n      setIsDrawing(true);\n    };\n    const onMouseMove = e => {\n      if (!isDrawing) return;\n      const {\n        x,\n        y\n      } = getCoords(e);\n      const dx = x - startPos.x,\n        dy = y - startPos.y;\n      ctx2.clearRect(0, 0, 600, 700);\n      ctx2.beginPath();\n      switch (activeTool) {\n        case \"square\":\n          ctx2.strokeRect(startPos.x, startPos.y, dx, dy);\n          break;\n        case \"line\":\n          ctx2.moveTo(startPos.x, startPos.y);\n          ctx2.lineTo(x, y);\n          ctx2.stroke();\n          break;\n        case \"circle\":\n          ctx2.arc(startPos.x, startPos.y, Math.hypot(dx, dy), 0, 2 * Math.PI);\n          ctx2.stroke();\n          break;\n        case \"triangle\":\n          ctx2.moveTo(startPos.x, startPos.y);\n          ctx2.lineTo(startPos.x + dx, startPos.y);\n          ctx2.lineTo(startPos.x + dx / 2, startPos.y + dy);\n          ctx2.closePath();\n          ctx2.stroke();\n          break;\n        case \"polygon\":\n          const sides = 5,\n            radius = Math.hypot(dx, dy),\n            step = 2 * Math.PI / sides;\n          for (let i = 0; i < sides; i++) {\n            const ang = i * step - Math.PI / 2;\n            const px = startPos.x + radius * Math.cos(ang),\n              py = startPos.y + radius * Math.sin(ang);\n            i === 0 ? ctx2.moveTo(px, py) : ctx2.lineTo(px, py);\n          }\n          ctx2.closePath();\n          ctx2.stroke();\n          break;\n        default:\n          break;\n      }\n    };\n    const onMouseUp = e => {\n      if (!isDrawing) return;\n      const {\n        x,\n        y\n      } = getCoords(e);\n      shapesRef.current.push({\n        tool: activeTool,\n        x0: startPos.x,\n        y0: startPos.y,\n        x1: x,\n        y1: y,\n        selected: false\n      });\n      redrawAll();\n      ctx2.clearRect(0, 0, 600, 700);\n      setIsDrawing(false);\n    };\n    const onKeyDown = e => {\n      // Undo: Ctrl+Z\n      if (e.ctrlKey && e.key === \"z\") {\n        shapesRef.current.pop();\n        redrawAll();\n      }\n    };\n    c2.addEventListener(\"mousedown\", onMouseDown);\n    c2.addEventListener(\"mousemove\", onMouseMove);\n    c2.addEventListener(\"mouseup\", onMouseUp);\n    window.addEventListener(\"keydown\", onKeyDown);\n    return () => {\n      c2.removeEventListener(\"mousedown\", onMouseDown);\n      c2.removeEventListener(\"mousemove\", onMouseMove);\n      c2.removeEventListener(\"mouseup\", onMouseUp);\n      window.removeEventListener(\"keydown\", onKeyDown);\n    };\n  }, [activeTool, isDrawing, startPos]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvas-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvas1Ref,\n      width: 600,\n      height: 700\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvas2Ref,\n      width: 600,\n      height: 700,\n      style: {\n        backgroundColor: \"transparent\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 9\n  }, this);\n}, \"NDI3y68O3d6R0ZzA7FZ2/chbaMQ=\")), \"NDI3y68O3d6R0ZzA7FZ2/chbaMQ=\");\n_c2 = Canvas;\nexport default Canvas;\nvar _c, _c2;\n$RefreshReg$(_c, \"Canvas$forwardRef\");\n$RefreshReg$(_c2, \"Canvas\");","map":{"version":3,"names":["React","useRef","useEffect","useState","forwardRef","useImperativeHandle","jsxDEV","_jsxDEV","Canvas","_s","_c","activeTool","ref","canvas1Ref","canvas2Ref","shapesRef","isDrawing","setIsDrawing","startPos","setStartPos","x","y","exportShapes","dataStr","JSON","stringify","current","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","redrawAll","ctx","getContext","clearRect","forEach","s","beginPath","strokeStyle","selected","tool","x0","y0","x1","y1","strokeRect","moveTo","lineTo","stroke","arc","Math","hypot","PI","closePath","sides","radius","step","i","ang","px","cos","py","sin","c2","ctx2","getCoords","e","r","getBoundingClientRect","clientX","left","clientY","top","onMouseDown","includes","onMouseMove","dx","dy","onMouseUp","push","onKeyDown","ctrlKey","key","pop","addEventListener","window","removeEventListener","className","children","width","height","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","_c2","$RefreshReg$"],"sources":["/home/nightsquid/Desktop/GUI II/studyspace/src/components/Canvas.js"],"sourcesContent":["// src/components/Canvas.js\nimport React, {\n    useRef,\n    useEffect,\n    useState,\n    forwardRef,\n    useImperativeHandle,\n} from \"react\";\nimport \"../css/canvas.css\";\n\nconst Canvas = forwardRef(({ activeTool }, ref) => {\n    const canvas1Ref = useRef(null);\n    const canvas2Ref = useRef(null);\n    const shapesRef = useRef([]);\n    const [isDrawing, setIsDrawing] = useState(false);\n    const [startPos, setStartPos] = useState({ x: 0, y: 0 });\n\n    // expose exportShapes to parent\n    useImperativeHandle(ref, () => ({\n        exportShapes: () => {\n            const dataStr = JSON.stringify(shapesRef.current, null, 2);\n            const blob = new Blob([dataStr], { type: \"application/json\" });\n            const url = URL.createObjectURL(blob);\n            const a = document.createElement(\"a\");\n            a.href = url;\n            a.download = \"shapes.json\";\n            a.click();\n            URL.revokeObjectURL(url);\n        },\n    }));\n\n    const redrawAll = () => {\n        const ctx = canvas1Ref.current.getContext(\"2d\");\n        ctx.clearRect(0, 0, 600, 700);\n        shapesRef.current.forEach((s) => {\n            ctx.beginPath();\n            ctx.strokeStyle = s.selected ? \"red\" : \"#000\";\n            const { tool, x0, y0, x1, y1 } = s;\n            switch (tool) {\n                case \"square\":\n                    ctx.strokeRect(x0, y0, x1 - x0, y1 - y0);\n                    break;\n                case \"line\":\n                    ctx.moveTo(x0, y0);\n                    ctx.lineTo(x1, y1);\n                    ctx.stroke();\n                    break;\n                case \"circle\":\n                    ctx.arc(x0, y0, Math.hypot(x1 - x0, y1 - y0), 0, 2 * Math.PI);\n                    ctx.stroke();\n                    break;\n                case \"triangle\":\n                    ctx.moveTo(x0, y0);\n                    ctx.lineTo(x1, y0);\n                    ctx.lineTo((x0 + x1) / 2, y1);\n                    ctx.closePath();\n                    ctx.stroke();\n                    break;\n                case \"polygon\":\n                    const sides = 5,\n                        radius = Math.hypot(x1 - x0, y1 - y0),\n                        step = (2 * Math.PI) / sides;\n                    for (let i = 0; i < sides; i++) {\n                        const ang = i * step - Math.PI / 2;\n                        const px = x0 + radius * Math.cos(ang),\n                            py = y0 + radius * Math.sin(ang);\n                        i === 0 ? ctx.moveTo(px, py) : ctx.lineTo(px, py);\n                    }\n                    ctx.closePath();\n                    ctx.stroke();\n                    break;\n                default:\n                    break;\n            }\n        });\n    };\n\n    useEffect(() => {\n        const c2 = canvas2Ref.current;\n        const ctx2 = c2.getContext(\"2d\");\n\n        const getCoords = (e) => {\n            const r = c2.getBoundingClientRect();\n            return { x: e.clientX - r.left, y: e.clientY - r.top };\n        };\n\n        const onMouseDown = (e) => {\n            if (activeTool === \"cursor\") {\n                // ... selection logic (unchanged) ...\n                return;\n            }\n            if (![\"square\", \"line\", \"circle\", \"triangle\", \"polygon\"].includes(activeTool)) return;\n            setStartPos(getCoords(e));\n            setIsDrawing(true);\n        };\n        const onMouseMove = (e) => {\n            if (!isDrawing) return;\n            const { x, y } = getCoords(e);\n            const dx = x - startPos.x,\n                dy = y - startPos.y;\n            ctx2.clearRect(0, 0, 600, 700);\n            ctx2.beginPath();\n            switch (activeTool) {\n                case \"square\":\n                    ctx2.strokeRect(startPos.x, startPos.y, dx, dy);\n                    break;\n                case \"line\":\n                    ctx2.moveTo(startPos.x, startPos.y);\n                    ctx2.lineTo(x, y);\n                    ctx2.stroke();\n                    break;\n                case \"circle\":\n                    ctx2.arc(startPos.x, startPos.y, Math.hypot(dx, dy), 0, 2 * Math.PI);\n                    ctx2.stroke();\n                    break;\n                case \"triangle\":\n                    ctx2.moveTo(startPos.x, startPos.y);\n                    ctx2.lineTo(startPos.x + dx, startPos.y);\n                    ctx2.lineTo(startPos.x + dx / 2, startPos.y + dy);\n                    ctx2.closePath();\n                    ctx2.stroke();\n                    break;\n                case \"polygon\":\n                    const sides = 5, radius = Math.hypot(dx, dy), step = (2 * Math.PI) / sides;\n                    for (let i = 0; i < sides; i++) {\n                        const ang = i * step - Math.PI / 2;\n                        const px = startPos.x + radius * Math.cos(ang),\n                            py = startPos.y + radius * Math.sin(ang);\n                        i === 0 ? ctx2.moveTo(px, py) : ctx2.lineTo(px, py);\n                    }\n                    ctx2.closePath();\n                    ctx2.stroke();\n                    break;\n                default:\n                    break;\n            }\n        };\n        const onMouseUp = (e) => {\n            if (!isDrawing) return;\n            const { x, y } = getCoords(e);\n            shapesRef.current.push({\n                tool: activeTool,\n                x0: startPos.x, y0: startPos.y,\n                x1: x, y1: y,\n                selected: false\n            });\n            redrawAll();\n            ctx2.clearRect(0, 0, 600, 700);\n            setIsDrawing(false);\n        };\n\n        const onKeyDown = e => {\n            // Undo: Ctrl+Z\n            if (e.ctrlKey && e.key === \"z\") {\n                shapesRef.current.pop();\n                redrawAll();\n            }\n        };\n\n        c2.addEventListener(\"mousedown\", onMouseDown);\n        c2.addEventListener(\"mousemove\", onMouseMove);\n        c2.addEventListener(\"mouseup\", onMouseUp);\n        window.addEventListener(\"keydown\", onKeyDown);\n        return () => {\n            c2.removeEventListener(\"mousedown\", onMouseDown);\n            c2.removeEventListener(\"mousemove\", onMouseMove);\n            c2.removeEventListener(\"mouseup\", onMouseUp);\n            window.removeEventListener(\"keydown\", onKeyDown)\n        };\n    }, [activeTool, isDrawing, startPos]);\n\n    return (\n        <div className=\"canvas-container\">\n            <canvas ref={canvas1Ref} width={600} height={700} />\n            <canvas ref={canvas2Ref} width={600} height={700} style={{ backgroundColor: \"transparent\" }} />\n        </div>\n    );\n});\n\nexport default Canvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}