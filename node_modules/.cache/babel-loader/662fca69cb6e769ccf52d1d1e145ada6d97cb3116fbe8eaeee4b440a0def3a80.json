{"ast":null,"code":"var _jsxFileName = \"/home/nightsquid/Desktop/GUI II/studyspace/src/components/Canvas.js\",\n  _s = $RefreshSig$();\n// src/components/Canvas.js\nimport React, { forwardRef, useImperativeHandle, useRef, useEffect, useState } from \"react\";\nimport { jsPDF } from \"jspdf\";\nimport \"../css/canvas.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = /*#__PURE__*/_s(/*#__PURE__*/forwardRef(_c = _s(({\n  activeTool,\n  lineColor,\n  fillColor,\n  strokeWidth\n}, ref) => {\n  _s();\n  const c1Ref = useRef();\n  const c2Ref = useRef();\n  const shapesRef = useRef([]);\n  const redoRef = useRef([]);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [startPos, setStartPos] = useState({\n    x: 0,\n    y: 0\n  });\n  useImperativeHandle(ref, () => ({\n    exportShapes: () => {\n      const data = JSON.stringify(shapesRef.current, null, 2);\n      const blob = new Blob([data], {\n        type: \"application/json\"\n      });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = \"shapes.json\";\n      a.click();\n      URL.revokeObjectURL(url);\n    },\n    downloadJPEG: () => {\n      const canvas = c1Ref.current;\n      const dataURL = canvas.toDataURL(\"image/jpeg\", 1.0);\n      const link = document.createElement(\"a\");\n      link.href = dataURL;\n      link.download = \"canvas.jpg\";\n      link.click();\n    },\n    downloadPDF: () => {\n      const canvas = c1Ref.current;\n      const imgData = canvas.toDataURL(\"image/jpeg\", 1.0);\n      const pdf = new jsPDF({\n        unit: \"px\",\n        format: [canvas.width, canvas.height]\n      });\n      pdf.addImage(imgData, \"JPEG\", 0, 0, canvas.width, canvas.height);\n      pdf.save(\"canvas.pdf\");\n    },\n    loadShapes: arr => {\n      shapesRef.current = arr.map(s => ({\n        ...s,\n        selected: false\n      }));\n      redrawAll();\n    }\n  }));\n  const redrawAll = () => {\n    const canvas = c1Ref.current;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.fillStyle = \"#979797\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    shapesRef.current.forEach(s => {\n      const {\n        tool,\n        x0,\n        y0,\n        x1,\n        y1,\n        selected,\n        lineColor: lc,\n        fillColor: fc\n      } = s;\n      ctx.save();\n      ctx.strokeStyle = lc || lineColor;\n      ctx.fillStyle = fc || fillColor;\n      ctx.lineWidth = strokeWidth;\n      ctx.beginPath();\n      switch (tool) {\n        case \"square\":\n          ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n          ctx.strokeRect(x0, y0, x1 - x0, y1 - y0);\n          break;\n        case \"line\":\n          ctx.moveTo(x0, y0);\n          ctx.lineTo(x1, y1);\n          ctx.stroke();\n          break;\n        case \"circle\":\n          const r = Math.hypot(x1 - x0, y1 - y0);\n          ctx.arc(x0, y0, r, 0, 2 * Math.PI);\n          ctx.fill();\n          ctx.stroke();\n          break;\n        case \"triangle\":\n          ctx.moveTo(x0, y0);\n          ctx.lineTo(x1, y0);\n          ctx.lineTo((x0 + x1) / 2, y1);\n          ctx.closePath();\n          ctx.fill();\n          ctx.stroke();\n          break;\n        case \"polygon\":\n          const sides = 5;\n          const rad = Math.hypot(x1 - x0, y1 - y0);\n          const step = 2 * Math.PI / sides;\n          for (let i = 0; i < sides; i++) {\n            const ang = i * step - Math.PI / 2;\n            const px = x0 + rad * Math.cos(ang);\n            const py = y0 + rad * Math.sin(ang);\n            i === 0 ? ctx.moveTo(px, py) : ctx.lineTo(px, py);\n          }\n          ctx.closePath();\n          ctx.fill();\n          ctx.stroke();\n          break;\n      }\n      if (selected) {\n        ctx.strokeStyle = \"red\";\n        ctx.lineWidth = strokeWidth;\n        ctx.strokeRect(Math.min(x0, x1), Math.min(y0, y1), Math.abs(x1 - x0), Math.abs(y1 - y0));\n      }\n      ctx.restore();\n    });\n  };\n  useEffect(() => {\n    const c2 = c2Ref.current;\n    const ctx2 = c2.getContext(\"2d\");\n    const getPos = e => {\n      const rect = c2.getBoundingClientRect();\n      return {\n        x: e.clientX - rect.left,\n        y: e.clientY - rect.top\n      };\n    };\n    const down = e => {\n      if (activeTool === \"cursor\") {\n        const pos = getPos(e);\n        shapesRef.current.forEach(s => s.selected = false);\n        for (let i = shapesRef.current.length - 1; i >= 0; i--) {\n          const s = shapesRef.current[i];\n          const minX = Math.min(s.x0, s.x1);\n          const maxX = Math.max(s.x0, s.x1);\n          const minY = Math.min(s.y0, s.y1);\n          const maxY = Math.max(s.y0, s.y1);\n          if (pos.x >= minX && pos.x <= maxX && pos.y >= minY && pos.y <= maxY) {\n            s.selected = true;\n            break;\n          }\n        }\n        redrawAll();\n        return;\n      }\n      if (![\"square\", \"line\", \"circle\", \"triangle\", \"polygon\"].includes(activeTool)) {\n        return;\n      }\n      setStartPos(getPos(e));\n      setIsDrawing(true);\n    };\n    const move = e => {\n      if (!isDrawing) return;\n      const {\n        x,\n        y\n      } = getPos(e);\n      const dx = x - startPos.x;\n      const dy = y - startPos.y;\n      ctx2.clearRect(0, 0, c2.width, c2.height);\n      ctx2.strokeStyle = lineColor;\n      ctx2.lineWidth = strokeWidth;\n      ctx2.beginPath();\n      switch (activeTool) {\n        case \"square\":\n          ctx2.strokeRect(startPos.x, startPos.y, dx, dy);\n          break;\n        case \"line\":\n          ctx2.moveTo(startPos.x, startPos.y);\n          ctx2.lineTo(x, y);\n          ctx2.stroke();\n          break;\n        case \"circle\":\n          ctx2.arc(startPos.x, startPos.y, Math.hypot(dx, dy), 0, 2 * Math.PI);\n          ctx2.stroke();\n          break;\n        case \"triangle\":\n          ctx2.moveTo(startPos.x, startPos.y);\n          ctx2.lineTo(startPos.x + dx, startPos.y);\n          ctx2.lineTo(startPos.x + dx / 2, startPos.y + dy);\n          ctx2.closePath();\n          ctx2.stroke();\n          break;\n        case \"polygon\":\n          const sides2 = 5;\n          const rad2 = Math.hypot(dx, dy);\n          const step2 = 2 * Math.PI / sides2;\n          for (let i = 0; i < sides2; i++) {\n            const ang = i * step2 - Math.PI / 2;\n            const px = startPos.x + rad2 * Math.cos(ang);\n            const py = startPos.y + rad2 * Math.sin(ang);\n            i === 0 ? ctx2.moveTo(px, py) : ctx2.lineTo(px, py);\n          }\n          ctx2.closePath();\n          ctx2.stroke();\n          break;\n      }\n    };\n    const up = e => {\n      if (!isDrawing) return;\n      const {\n        x,\n        y\n      } = getPos(e);\n      shapesRef.current.push({\n        tool: activeTool,\n        x0: startPos.x,\n        y0: startPos.y,\n        x1: x,\n        y1: y,\n        lineColor,\n        fillColor,\n        selected: false\n      });\n      redrawAll();\n      ctx2.clearRect(0, 0, c2.width, c2.height);\n      setIsDrawing(false);\n    };\n    const onKeyDown = e => {\n      if (e.ctrlKey && e.key === \"z\" && shapesRef.current.length) {\n        redoRef.current.push(shapesRef.current.pop());\n        redrawAll();\n      } else if (e.ctrlKey && e.shiftKey && e.key.toLowerCase() === \"z\" && redoRef.current.length) {\n        shapesRef.current.push(redoRef.current.pop());\n        redrawAll();\n      }\n    };\n    c2.addEventListener(\"mousedown\", down);\n    c2.addEventListener(\"mousemove\", move);\n    c2.addEventListener(\"mouseup\", up);\n    window.addEventListener(\"keydown\", onKeyDown);\n    return () => {\n      c2.removeEventListener(\"mousedown\", down);\n      c2.removeEventListener(\"mousemove\", move);\n      c2.removeEventListener(\"mouseup\", up);\n      window.removeEventListener(\"keydown\", onKeyDown);\n    };\n  }, [activeTool, isDrawing, startPos, lineColor, fillColor, strokeWidth]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvas-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: c1Ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: c2Ref,\n      style: {\n        backgroundColor: \"transparent\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 263,\n    columnNumber: 13\n  }, this);\n}, \"K2CpK1DuvRus3POa7s2/re6JUmU=\")), \"K2CpK1DuvRus3POa7s2/re6JUmU=\");\n_c2 = Canvas;\nexport default Canvas;\nvar _c, _c2;\n$RefreshReg$(_c, \"Canvas$forwardRef\");\n$RefreshReg$(_c2, \"Canvas\");","map":{"version":3,"names":["React","forwardRef","useImperativeHandle","useRef","useEffect","useState","jsPDF","jsxDEV","_jsxDEV","Canvas","_s","_c","activeTool","lineColor","fillColor","strokeWidth","ref","c1Ref","c2Ref","shapesRef","redoRef","isDrawing","setIsDrawing","startPos","setStartPos","x","y","exportShapes","data","JSON","stringify","current","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","downloadJPEG","canvas","dataURL","toDataURL","link","downloadPDF","imgData","pdf","unit","format","width","height","addImage","save","loadShapes","arr","map","s","selected","redrawAll","ctx","getContext","clearRect","fillStyle","fillRect","forEach","tool","x0","y0","x1","y1","lc","fc","strokeStyle","lineWidth","beginPath","strokeRect","moveTo","lineTo","stroke","r","Math","hypot","arc","PI","fill","closePath","sides","rad","step","i","ang","px","cos","py","sin","min","abs","restore","c2","ctx2","getPos","e","rect","getBoundingClientRect","clientX","left","clientY","top","down","pos","length","minX","maxX","max","minY","maxY","includes","move","dx","dy","sides2","rad2","step2","up","push","onKeyDown","ctrlKey","key","pop","shiftKey","toLowerCase","addEventListener","window","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","_c2","$RefreshReg$"],"sources":["/home/nightsquid/Desktop/GUI II/studyspace/src/components/Canvas.js"],"sourcesContent":["// src/components/Canvas.js\nimport React, {\n    forwardRef,\n    useImperativeHandle,\n    useRef,\n    useEffect,\n    useState\n} from \"react\";\nimport { jsPDF } from \"jspdf\";\nimport \"../css/canvas.css\";\n\nconst Canvas = forwardRef(\n    ({ activeTool, lineColor, fillColor, strokeWidth }, ref) => {\n        const c1Ref = useRef();\n        const c2Ref = useRef();\n        const shapesRef = useRef([]);\n        const redoRef = useRef([]);\n        const [isDrawing, setIsDrawing] = useState(false);\n        const [startPos, setStartPos] = useState({ x: 0, y: 0 });\n\n        useImperativeHandle(ref, () => ({\n            exportShapes: () => {\n                const data = JSON.stringify(shapesRef.current, null, 2);\n                const blob = new Blob([data], { type: \"application/json\" });\n                const url = URL.createObjectURL(blob);\n                const a = document.createElement(\"a\");\n                a.href = url;\n                a.download = \"shapes.json\";\n                a.click();\n                URL.revokeObjectURL(url);\n            },\n            downloadJPEG: () => {\n                const canvas = c1Ref.current;\n                const dataURL = canvas.toDataURL(\"image/jpeg\", 1.0);\n                const link = document.createElement(\"a\");\n                link.href = dataURL;\n                link.download = \"canvas.jpg\";\n                link.click();\n            },\n            downloadPDF: () => {\n                const canvas = c1Ref.current;\n                const imgData = canvas.toDataURL(\"image/jpeg\", 1.0);\n                const pdf = new jsPDF({\n                    unit: \"px\",\n                    format: [canvas.width, canvas.height]\n                });\n                pdf.addImage(imgData, \"JPEG\", 0, 0, canvas.width, canvas.height);\n                pdf.save(\"canvas.pdf\");\n            },\n            loadShapes: (arr) => {\n                shapesRef.current = arr.map(s => ({ ...s, selected: false }));\n                redrawAll();\n            }\n        }));\n\n        const redrawAll = () => {\n            const canvas = c1Ref.current;\n            const ctx = canvas.getContext(\"2d\");\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            ctx.fillStyle = \"#979797\";\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n            shapesRef.current.forEach(s => {\n                const { tool, x0, y0, x1, y1, selected, lineColor: lc, fillColor: fc } = s;\n                ctx.save();\n                ctx.strokeStyle = lc || lineColor;\n                ctx.fillStyle = fc || fillColor;\n                ctx.lineWidth = strokeWidth;\n                ctx.beginPath();\n\n                switch (tool) {\n                    case \"square\":\n                        ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n                        ctx.strokeRect(x0, y0, x1 - x0, y1 - y0);\n                        break;\n                    case \"line\":\n                        ctx.moveTo(x0, y0);\n                        ctx.lineTo(x1, y1);\n                        ctx.stroke();\n                        break;\n                    case \"circle\":\n                        const r = Math.hypot(x1 - x0, y1 - y0);\n                        ctx.arc(x0, y0, r, 0, 2 * Math.PI);\n                        ctx.fill();\n                        ctx.stroke();\n                        break;\n                    case \"triangle\":\n                        ctx.moveTo(x0, y0);\n                        ctx.lineTo(x1, y0);\n                        ctx.lineTo((x0 + x1) / 2, y1);\n                        ctx.closePath();\n                        ctx.fill();\n                        ctx.stroke();\n                        break;\n                    case \"polygon\":\n                        const sides = 5;\n                        const rad = Math.hypot(x1 - x0, y1 - y0);\n                        const step = (2 * Math.PI) / sides;\n                        for (let i = 0; i < sides; i++) {\n                            const ang = i * step - Math.PI / 2;\n                            const px = x0 + rad * Math.cos(ang);\n                            const py = y0 + rad * Math.sin(ang);\n                            i === 0 ? ctx.moveTo(px, py) : ctx.lineTo(px, py);\n                        }\n                        ctx.closePath();\n                        ctx.fill();\n                        ctx.stroke();\n                        break;\n                }\n\n                if (selected) {\n                    ctx.strokeStyle = \"red\";\n                    ctx.lineWidth = strokeWidth;\n                    ctx.strokeRect(\n                        Math.min(x0, x1),\n                        Math.min(y0, y1),\n                        Math.abs(x1 - x0),\n                        Math.abs(y1 - y0)\n                    );\n                }\n\n                ctx.restore();\n            });\n        };\n\n        useEffect(() => {\n            const c2 = c2Ref.current;\n            const ctx2 = c2.getContext(\"2d\");\n\n            const getPos = e => {\n                const rect = c2.getBoundingClientRect();\n                return { x: e.clientX - rect.left, y: e.clientY - rect.top };\n            };\n\n            const down = e => {\n                if (activeTool === \"cursor\") {\n                    const pos = getPos(e);\n                    shapesRef.current.forEach(s => (s.selected = false));\n                    for (let i = shapesRef.current.length - 1; i >= 0; i--) {\n                        const s = shapesRef.current[i];\n                        const minX = Math.min(s.x0, s.x1);\n                        const maxX = Math.max(s.x0, s.x1);\n                        const minY = Math.min(s.y0, s.y1);\n                        const maxY = Math.max(s.y0, s.y1);\n                        if (\n                            pos.x >= minX &&\n                            pos.x <= maxX &&\n                            pos.y >= minY &&\n                            pos.y <= maxY\n                        ) {\n                            s.selected = true;\n                            break;\n                        }\n                    }\n                    redrawAll();\n                    return;\n                }\n                if (![\"square\", \"line\", \"circle\", \"triangle\", \"polygon\"].includes(activeTool)) {\n                    return;\n                }\n                setStartPos(getPos(e));\n                setIsDrawing(true);\n            };\n\n            const move = e => {\n                if (!isDrawing) return;\n                const { x, y } = getPos(e);\n                const dx = x - startPos.x;\n                const dy = y - startPos.y;\n                ctx2.clearRect(0, 0, c2.width, c2.height);\n                ctx2.strokeStyle = lineColor;\n                ctx2.lineWidth = strokeWidth;\n                ctx2.beginPath();\n\n                switch (activeTool) {\n                    case \"square\":\n                        ctx2.strokeRect(startPos.x, startPos.y, dx, dy);\n                        break;\n                    case \"line\":\n                        ctx2.moveTo(startPos.x, startPos.y);\n                        ctx2.lineTo(x, y);\n                        ctx2.stroke();\n                        break;\n                    case \"circle\":\n                        ctx2.arc(\n                            startPos.x,\n                            startPos.y,\n                            Math.hypot(dx, dy),\n                            0,\n                            2 * Math.PI\n                        );\n                        ctx2.stroke();\n                        break;\n                    case \"triangle\":\n                        ctx2.moveTo(startPos.x, startPos.y);\n                        ctx2.lineTo(startPos.x + dx, startPos.y);\n                        ctx2.lineTo(startPos.x + dx / 2, startPos.y + dy);\n                        ctx2.closePath();\n                        ctx2.stroke();\n                        break;\n                    case \"polygon\":\n                        const sides2 = 5;\n                        const rad2 = Math.hypot(dx, dy);\n                        const step2 = (2 * Math.PI) / sides2;\n                        for (let i = 0; i < sides2; i++) {\n                            const ang = i * step2 - Math.PI / 2;\n                            const px = startPos.x + rad2 * Math.cos(ang);\n                            const py = startPos.y + rad2 * Math.sin(ang);\n                            i === 0 ? ctx2.moveTo(px, py) : ctx2.lineTo(px, py);\n                        }\n                        ctx2.closePath();\n                        ctx2.stroke();\n                        break;\n                }\n            };\n\n            const up = e => {\n                if (!isDrawing) return;\n                const { x, y } = getPos(e);\n                shapesRef.current.push({\n                    tool: activeTool,\n                    x0: startPos.x,\n                    y0: startPos.y,\n                    x1: x,\n                    y1: y,\n                    lineColor,\n                    fillColor,\n                    selected: false\n                });\n                redrawAll();\n                ctx2.clearRect(0, 0, c2.width, c2.height);\n                setIsDrawing(false);\n            };\n\n            const onKeyDown = e => {\n                if (e.ctrlKey && e.key === \"z\" && shapesRef.current.length) {\n                    redoRef.current.push(shapesRef.current.pop());\n                    redrawAll();\n                } else if (\n                    e.ctrlKey &&\n                    e.shiftKey &&\n                    e.key.toLowerCase() === \"z\" &&\n                    redoRef.current.length\n                ) {\n                    shapesRef.current.push(redoRef.current.pop());\n                    redrawAll();\n                }\n            };\n\n            c2.addEventListener(\"mousedown\", down);\n            c2.addEventListener(\"mousemove\", move);\n            c2.addEventListener(\"mouseup\", up);\n            window.addEventListener(\"keydown\", onKeyDown);\n            return () => {\n                c2.removeEventListener(\"mousedown\", down);\n                c2.removeEventListener(\"mousemove\", move);\n                c2.removeEventListener(\"mouseup\", up);\n                window.removeEventListener(\"keydown\", onKeyDown);\n            };\n        }, [activeTool, isDrawing, startPos, lineColor, fillColor, strokeWidth]);\n\n        return (\n            <div className=\"canvas-container\">\n                <canvas ref={c1Ref} />\n                <canvas ref={c2Ref} style={{ backgroundColor: \"transparent\" }} />\n            </div>\n        );\n    }\n);\n\nexport default Canvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}