{"ast":null,"code":"var _jsxFileName = \"/home/nightsquid/Desktop/GUI II/studyspace/src/components/Canvas.js\",\n  _s = $RefreshSig$();\n// src/components/Canvas.js\nimport React, { forwardRef, useImperativeHandle, useRef, useEffect, useState } from \"react\";\nimport { jsPDF } from \"jspdf\";\nimport \"../css/canvas.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = /*#__PURE__*/_s(/*#__PURE__*/forwardRef(_c = _s(({\n  activeTool,\n  lineColor,\n  fillColor,\n  strokeWidth\n}, ref) => {\n  _s();\n  const c1Ref = useRef();\n  const c2Ref = useRef();\n  const shapesRef = useRef([]);\n  const redoRef = useRef([]);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [startPos, setStartPos] = useState({\n    x: 0,\n    y: 0\n  });\n\n  // expose export/load/download handlers\n  useImperativeHandle(ref, () => ({\n    exportShapes: () => {\n      const data = JSON.stringify(shapesRef.current, null, 2);\n      const blob = new Blob([data], {\n        type: \"application/json\"\n      });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = \"shapes.json\";\n      a.click();\n      URL.revokeObjectURL(url);\n    },\n    downloadJPEG: () => {\n      // …your existing downloadJPEG…\n    },\n    downloadPDF: () => {\n      // …your existing downloadPDF…\n    },\n    loadShapes: arr => {\n      shapesRef.current = arr.map(s => ({\n        ...s,\n        selected: false\n      }));\n      redrawAll();\n    }\n  }));\n\n  // main redraw, using strokeWidth for every shape stroke\n  const redrawAll = () => {\n    const ctx = c1Ref.current.getContext(\"2d\");\n    ctx.clearRect(0, 0, c1Ref.current.width, c1Ref.current.height);\n    ctx.fillStyle = \"#979797\";\n    ctx.fillRect(0, 0, c1Ref.current.width, c1Ref.current.height);\n    shapesRef.current.forEach(s => {\n      const {\n        tool,\n        x0,\n        y0,\n        x1,\n        y1,\n        selected,\n        lineColor: lc,\n        fillColor: fc\n      } = s;\n      ctx.save();\n      ctx.strokeStyle = lc || lineColor;\n      ctx.fillStyle = fc || fillColor;\n      ctx.lineWidth = strokeWidth; // ← use strokeWidth\n      ctx.beginPath();\n      switch (tool) {\n        case \"square\":\n          ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n          ctx.strokeRect(x0, y0, x1 - x0, y1 - y0);\n          break;\n        case \"line\":\n          ctx.moveTo(x0, y0);\n          ctx.lineTo(x1, y1);\n          ctx.stroke();\n          break;\n        case \"circle\":\n          const r = Math.hypot(x1 - x0, y1 - y0);\n          ctx.arc(x0, y0, r, 0, 2 * Math.PI);\n          ctx.fill();\n          ctx.stroke();\n          break;\n        case \"triangle\":\n          ctx.moveTo(x0, y0);\n          ctx.lineTo(x1, y0);\n          ctx.lineTo((x0 + x1) / 2, y1);\n          ctx.closePath();\n          ctx.fill();\n          ctx.stroke();\n          break;\n        case \"polygon\":\n          const sides = 5;\n          const rad = Math.hypot(x1 - x0, y1 - y0);\n          const step = 2 * Math.PI / sides;\n          for (let i = 0; i < sides; i++) {\n            const ang = i * step - Math.PI / 2;\n            const px = x0 + rad * Math.cos(ang);\n            const py = y0 + rad * Math.sin(ang);\n            i === 0 ? ctx.moveTo(px, py) : ctx.lineTo(px, py);\n          }\n          ctx.closePath();\n          ctx.fill();\n          ctx.stroke();\n          break;\n      }\n      if (selected) {\n        ctx.strokeStyle = \"red\";\n        ctx.lineWidth = strokeWidth;\n        ctx.strokeRect(Math.min(x0, x1), Math.min(y0, y1), Math.abs(x1 - x0), Math.abs(y1 - y0));\n      }\n      ctx.restore();\n    });\n  };\n  useEffect(() => {\n    const c2 = c2Ref.current;\n    const ctx2 = c2.getContext(\"2d\");\n    const getPos = e => {\n      const r = c2.getBoundingClientRect();\n      return {\n        x: e.clientX - r.left,\n        y: e.clientY - r.top\n      };\n    };\n    const down = e => {\n      if (activeTool === \"cursor\") {\n        // …selection logic…\n        redrawAll();\n        return;\n      }\n      if (![\"square\", \"line\", \"circle\", \"triangle\", \"polygon\"].includes(activeTool)) return;\n      setStartPos(getPos(e));\n      setIsDrawing(true);\n    };\n    const move = e => {\n      if (!isDrawing) return;\n      const {\n        x,\n        y\n      } = getPos(e);\n      const dx = x - startPos.x,\n        dy = y - startPos.y;\n      ctx2.clearRect(0, 0, c2.width, c2.height);\n      ctx2.strokeStyle = lineColor;\n      ctx2.lineWidth = strokeWidth; // ← use strokeWidth here\n      ctx2.beginPath();\n      switch (activeTool) {\n        case \"square\":\n          ctx2.strokeRect(startPos.x, startPos.y, dx, dy);\n          break;\n        case \"line\":\n          ctx2.moveTo(startPos.x, startPos.y);\n          ctx2.lineTo(x, y);\n          ctx2.stroke();\n          break;\n        case \"circle\":\n          ctx2.arc(startPos.x, startPos.y, Math.hypot(dx, dy), 0, 2 * Math.PI);\n          ctx2.stroke();\n          break;\n        case \"triangle\":\n          ctx2.moveTo(startPos.x, startPos.y);\n          ctx2.lineTo(startPos.x + dx, startPos.y);\n          ctx2.lineTo(startPos.x + dx / 2, startPos.y + dy);\n          ctx2.closePath();\n          ctx2.stroke();\n          break;\n        case \"polygon\":\n          const sides2 = 5;\n          const rad2 = Math.hypot(dx, dy);\n          const step2 = 2 * Math.PI / sides2;\n          for (let i = 0; i < sides2; i++) {\n            const ang = i * step2 - Math.PI / 2;\n            const px = startPos.x + rad2 * Math.cos(ang);\n            const py = startPos.y + rad2 * Math.sin(ang);\n            i === 0 ? ctx2.moveTo(px, py) : ctx2.lineTo(px, py);\n          }\n          ctx2.closePath();\n          ctx2.stroke();\n          break;\n      }\n    };\n    const up = e => {\n      if (!isDrawing) return;\n      const {\n        x,\n        y\n      } = getPos(e);\n      shapesRef.current.push({\n        tool: activeTool,\n        x0: startPos.x,\n        y0: startPos.y,\n        x1: x,\n        y1: y,\n        lineColor,\n        fillColor,\n        selected: false\n      });\n      redrawAll();\n      ctx2.clearRect(0, 0, c2.width, c2.height);\n      setIsDrawing(false);\n    };\n    const onKeyDown = e => {\n      if (e.ctrlKey && e.key === \"z\" && shapesRef.current.length) {\n        redoRef.current.push(shapesRef.current.pop());\n        redrawAll();\n      } else if (e.ctrlKey && e.shiftKey && e.key.toLowerCase() === \"z\" && redoRef.current.length) {\n        shapesRef.current.push(redoRef.current.pop());\n        redrawAll();\n      }\n    };\n    c2.addEventListener(\"mousedown\", down);\n    c2.addEventListener(\"mousemove\", move);\n    c2.addEventListener(\"mouseup\", up);\n    window.addEventListener(\"keydown\", onKeyDown);\n    return () => {\n      c2.removeEventListener(\"mousedown\", down);\n      c2.removeEventListener(\"mousemove\", move);\n      c2.removeEventListener(\"mouseup\", up);\n      window.removeEventListener(\"keydown\", onKeyDown);\n    };\n  }, [activeTool, isDrawing, startPos, lineColor, fillColor, strokeWidth]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvas-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: c1Ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: c2Ref,\n      style: {\n        backgroundColor: \"transparent\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 13\n  }, this);\n}, \"K2CpK1DuvRus3POa7s2/re6JUmU=\")), \"K2CpK1DuvRus3POa7s2/re6JUmU=\");\n_c2 = Canvas;\nexport default Canvas;\nvar _c, _c2;\n$RefreshReg$(_c, \"Canvas$forwardRef\");\n$RefreshReg$(_c2, \"Canvas\");","map":{"version":3,"names":["React","forwardRef","useImperativeHandle","useRef","useEffect","useState","jsPDF","jsxDEV","_jsxDEV","Canvas","_s","_c","activeTool","lineColor","fillColor","strokeWidth","ref","c1Ref","c2Ref","shapesRef","redoRef","isDrawing","setIsDrawing","startPos","setStartPos","x","y","exportShapes","data","JSON","stringify","current","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","downloadJPEG","downloadPDF","loadShapes","arr","map","s","selected","redrawAll","ctx","getContext","clearRect","width","height","fillStyle","fillRect","forEach","tool","x0","y0","x1","y1","lc","fc","save","strokeStyle","lineWidth","beginPath","strokeRect","moveTo","lineTo","stroke","r","Math","hypot","arc","PI","fill","closePath","sides","rad","step","i","ang","px","cos","py","sin","min","abs","restore","c2","ctx2","getPos","e","getBoundingClientRect","clientX","left","clientY","top","down","includes","move","dx","dy","sides2","rad2","step2","up","push","onKeyDown","ctrlKey","key","length","pop","shiftKey","toLowerCase","addEventListener","window","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","_c2","$RefreshReg$"],"sources":["/home/nightsquid/Desktop/GUI II/studyspace/src/components/Canvas.js"],"sourcesContent":["// src/components/Canvas.js\nimport React, {\n    forwardRef,\n    useImperativeHandle,\n    useRef,\n    useEffect,\n    useState\n} from \"react\";\nimport { jsPDF } from \"jspdf\";\nimport \"../css/canvas.css\";\n\nconst Canvas = forwardRef(\n    ({ activeTool, lineColor, fillColor, strokeWidth }, ref) => {\n        const c1Ref = useRef();\n        const c2Ref = useRef();\n        const shapesRef = useRef([]);\n        const redoRef = useRef([]);\n        const [isDrawing, setIsDrawing] = useState(false);\n        const [startPos, setStartPos] = useState({ x: 0, y: 0 });\n\n        // expose export/load/download handlers\n        useImperativeHandle(ref, () => ({\n            exportShapes: () => {\n                const data = JSON.stringify(shapesRef.current, null, 2);\n                const blob = new Blob([data], { type: \"application/json\" });\n                const url = URL.createObjectURL(blob);\n                const a = document.createElement(\"a\");\n                a.href = url;\n                a.download = \"shapes.json\";\n                a.click();\n                URL.revokeObjectURL(url);\n            },\n            downloadJPEG: () => {\n                // …your existing downloadJPEG…\n            },\n            downloadPDF: () => {\n                // …your existing downloadPDF…\n            },\n            loadShapes: (arr) => {\n                shapesRef.current = arr.map(s => ({ ...s, selected: false }));\n                redrawAll();\n            }\n        }));\n\n        // main redraw, using strokeWidth for every shape stroke\n        const redrawAll = () => {\n            const ctx = c1Ref.current.getContext(\"2d\");\n            ctx.clearRect(0, 0, c1Ref.current.width, c1Ref.current.height);\n            ctx.fillStyle = \"#979797\";\n            ctx.fillRect(0, 0, c1Ref.current.width, c1Ref.current.height);\n\n            shapesRef.current.forEach(s => {\n                const { tool, x0, y0, x1, y1, selected, lineColor: lc, fillColor: fc } = s;\n                ctx.save();\n                ctx.strokeStyle = lc || lineColor;\n                ctx.fillStyle = fc || fillColor;\n                ctx.lineWidth = strokeWidth;                     // ← use strokeWidth\n                ctx.beginPath();\n                switch (tool) {\n                    case \"square\":\n                        ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n                        ctx.strokeRect(x0, y0, x1 - x0, y1 - y0);\n                        break;\n                    case \"line\":\n                        ctx.moveTo(x0, y0);\n                        ctx.lineTo(x1, y1);\n                        ctx.stroke();\n                        break;\n                    case \"circle\":\n                        const r = Math.hypot(x1 - x0, y1 - y0);\n                        ctx.arc(x0, y0, r, 0, 2 * Math.PI);\n                        ctx.fill();\n                        ctx.stroke();\n                        break;\n                    case \"triangle\":\n                        ctx.moveTo(x0, y0);\n                        ctx.lineTo(x1, y0);\n                        ctx.lineTo((x0 + x1) / 2, y1);\n                        ctx.closePath();\n                        ctx.fill();\n                        ctx.stroke();\n                        break;\n                    case \"polygon\":\n                        const sides = 5;\n                        const rad = Math.hypot(x1 - x0, y1 - y0);\n                        const step = (2 * Math.PI) / sides;\n                        for (let i = 0; i < sides; i++) {\n                            const ang = i * step - Math.PI / 2;\n                            const px = x0 + rad * Math.cos(ang);\n                            const py = y0 + rad * Math.sin(ang);\n                            i === 0 ? ctx.moveTo(px, py) : ctx.lineTo(px, py);\n                        }\n                        ctx.closePath();\n                        ctx.fill();\n                        ctx.stroke();\n                        break;\n                }\n                if (selected) {\n                    ctx.strokeStyle = \"red\";\n                    ctx.lineWidth = strokeWidth;\n                    ctx.strokeRect(\n                        Math.min(x0, x1),\n                        Math.min(y0, y1),\n                        Math.abs(x1 - x0),\n                        Math.abs(y1 - y0)\n                    );\n                }\n                ctx.restore();\n            });\n        };\n\n        useEffect(() => {\n            const c2 = c2Ref.current;\n            const ctx2 = c2.getContext(\"2d\");\n            const getPos = e => {\n                const r = c2.getBoundingClientRect();\n                return { x: e.clientX - r.left, y: e.clientY - r.top };\n            };\n\n            const down = e => {\n                if (activeTool === \"cursor\") {\n                    // …selection logic…\n                    redrawAll();\n                    return;\n                }\n                if (![\"square\", \"line\", \"circle\", \"triangle\", \"polygon\"].includes(activeTool)) return;\n                setStartPos(getPos(e));\n                setIsDrawing(true);\n            };\n\n            const move = e => {\n                if (!isDrawing) return;\n                const { x, y } = getPos(e);\n                const dx = x - startPos.x, dy = y - startPos.y;\n                ctx2.clearRect(0, 0, c2.width, c2.height);\n                ctx2.strokeStyle = lineColor;\n                ctx2.lineWidth = strokeWidth;                 // ← use strokeWidth here\n                ctx2.beginPath();\n                switch (activeTool) {\n                    case \"square\":\n                        ctx2.strokeRect(startPos.x, startPos.y, dx, dy);\n                        break;\n                    case \"line\":\n                        ctx2.moveTo(startPos.x, startPos.y);\n                        ctx2.lineTo(x, y);\n                        ctx2.stroke();\n                        break;\n                    case \"circle\":\n                        ctx2.arc(startPos.x, startPos.y, Math.hypot(dx, dy), 0, 2 * Math.PI);\n                        ctx2.stroke();\n                        break;\n                    case \"triangle\":\n                        ctx2.moveTo(startPos.x, startPos.y);\n                        ctx2.lineTo(startPos.x + dx, startPos.y);\n                        ctx2.lineTo(startPos.x + dx / 2, startPos.y + dy);\n                        ctx2.closePath();\n                        ctx2.stroke();\n                        break;\n                    case \"polygon\":\n                        const sides2 = 5;\n                        const rad2 = Math.hypot(dx, dy);\n                        const step2 = 2 * Math.PI / sides2;\n                        for (let i = 0; i < sides2; i++) {\n                            const ang = i * step2 - Math.PI / 2;\n                            const px = startPos.x + rad2 * Math.cos(ang);\n                            const py = startPos.y + rad2 * Math.sin(ang);\n                            i === 0 ? ctx2.moveTo(px, py) : ctx2.lineTo(px, py);\n                        }\n                        ctx2.closePath();\n                        ctx2.stroke();\n                        break;\n                }\n            };\n\n            const up = e => {\n                if (!isDrawing) return;\n                const { x, y } = getPos(e);\n                shapesRef.current.push({\n                    tool: activeTool,\n                    x0: startPos.x, y0: startPos.y,\n                    x1: x, y1: y,\n                    lineColor, fillColor,\n                    selected: false\n                });\n                redrawAll();\n                ctx2.clearRect(0, 0, c2.width, c2.height);\n                setIsDrawing(false);\n            };\n\n            const onKeyDown = e => {\n                if (e.ctrlKey && e.key === \"z\" && shapesRef.current.length) {\n                    redoRef.current.push(shapesRef.current.pop());\n                    redrawAll();\n                } else if (e.ctrlKey && e.shiftKey && e.key.toLowerCase() === \"z\" && redoRef.current.length) {\n                    shapesRef.current.push(redoRef.current.pop());\n                    redrawAll();\n                }\n            };\n\n            c2.addEventListener(\"mousedown\", down);\n            c2.addEventListener(\"mousemove\", move);\n            c2.addEventListener(\"mouseup\", up);\n            window.addEventListener(\"keydown\", onKeyDown);\n            return () => {\n                c2.removeEventListener(\"mousedown\", down);\n                c2.removeEventListener(\"mousemove\", move);\n                c2.removeEventListener(\"mouseup\", up);\n                window.removeEventListener(\"keydown\", onKeyDown);\n            };\n        }, [activeTool, isDrawing, startPos, lineColor, fillColor, strokeWidth]);\n\n        return (\n            <div className=\"canvas-container\">\n                <canvas ref={c1Ref} />\n                <canvas ref={c2Ref} style={{ backgroundColor: \"transparent\" }} />\n            </div>\n        );\n    }\n);\n\nexport default Canvas;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IACRC,UAAU,EACVC,mBAAmB,EACnBC,MAAM,EACNC,SAAS,EACTC,QAAQ,QACL,OAAO;AACd,SAASC,KAAK,QAAQ,OAAO;AAC7B,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,MAAM,gBAAAC,EAAA,cAAGT,UAAU,CAAAU,EAAA,GAAAD,EAAA,CACrB,CAAC;EAAEE,UAAU;EAAEC,SAAS;EAAEC,SAAS;EAAEC;AAAY,CAAC,EAAEC,GAAG,KAAK;EAAAN,EAAA;EACxD,MAAMO,KAAK,GAAGd,MAAM,CAAC,CAAC;EACtB,MAAMe,KAAK,GAAGf,MAAM,CAAC,CAAC;EACtB,MAAMgB,SAAS,GAAGhB,MAAM,CAAC,EAAE,CAAC;EAC5B,MAAMiB,OAAO,GAAGjB,MAAM,CAAC,EAAE,CAAC;EAC1B,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC;IAAEoB,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;;EAExD;EACAxB,mBAAmB,CAACc,GAAG,EAAE,OAAO;IAC5BW,YAAY,EAAEA,CAAA,KAAM;MAChB,MAAMC,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACX,SAAS,CAACY,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;MACvD,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACL,IAAI,CAAC,EAAE;QAAEM,IAAI,EAAE;MAAmB,CAAC,CAAC;MAC3D,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;MACrC,MAAMM,CAAC,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACrCF,CAAC,CAACG,IAAI,GAAGN,GAAG;MACZG,CAAC,CAACI,QAAQ,GAAG,aAAa;MAC1BJ,CAAC,CAACK,KAAK,CAAC,CAAC;MACTP,GAAG,CAACQ,eAAe,CAACT,GAAG,CAAC;IAC5B,CAAC;IACDU,YAAY,EAAEA,CAAA,KAAM;MAChB;IAAA,CACH;IACDC,WAAW,EAAEA,CAAA,KAAM;MACf;IAAA,CACH;IACDC,UAAU,EAAGC,GAAG,IAAK;MACjB7B,SAAS,CAACY,OAAO,GAAGiB,GAAG,CAACC,GAAG,CAACC,CAAC,KAAK;QAAE,GAAGA,CAAC;QAAEC,QAAQ,EAAE;MAAM,CAAC,CAAC,CAAC;MAC7DC,SAAS,CAAC,CAAC;IACf;EACJ,CAAC,CAAC,CAAC;;EAEH;EACA,MAAMA,SAAS,GAAGA,CAAA,KAAM;IACpB,MAAMC,GAAG,GAAGpC,KAAK,CAACc,OAAO,CAACuB,UAAU,CAAC,IAAI,CAAC;IAC1CD,GAAG,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEtC,KAAK,CAACc,OAAO,CAACyB,KAAK,EAAEvC,KAAK,CAACc,OAAO,CAAC0B,MAAM,CAAC;IAC9DJ,GAAG,CAACK,SAAS,GAAG,SAAS;IACzBL,GAAG,CAACM,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE1C,KAAK,CAACc,OAAO,CAACyB,KAAK,EAAEvC,KAAK,CAACc,OAAO,CAAC0B,MAAM,CAAC;IAE7DtC,SAAS,CAACY,OAAO,CAAC6B,OAAO,CAACV,CAAC,IAAI;MAC3B,MAAM;QAAEW,IAAI;QAAEC,EAAE;QAAEC,EAAE;QAAEC,EAAE;QAAEC,EAAE;QAAEd,QAAQ;QAAEtC,SAAS,EAAEqD,EAAE;QAAEpD,SAAS,EAAEqD;MAAG,CAAC,GAAGjB,CAAC;MAC1EG,GAAG,CAACe,IAAI,CAAC,CAAC;MACVf,GAAG,CAACgB,WAAW,GAAGH,EAAE,IAAIrD,SAAS;MACjCwC,GAAG,CAACK,SAAS,GAAGS,EAAE,IAAIrD,SAAS;MAC/BuC,GAAG,CAACiB,SAAS,GAAGvD,WAAW,CAAC,CAAqB;MACjDsC,GAAG,CAACkB,SAAS,CAAC,CAAC;MACf,QAAQV,IAAI;QACR,KAAK,QAAQ;UACTR,GAAG,CAACM,QAAQ,CAACG,EAAE,EAAEC,EAAE,EAAEC,EAAE,GAAGF,EAAE,EAAEG,EAAE,GAAGF,EAAE,CAAC;UACtCV,GAAG,CAACmB,UAAU,CAACV,EAAE,EAAEC,EAAE,EAAEC,EAAE,GAAGF,EAAE,EAAEG,EAAE,GAAGF,EAAE,CAAC;UACxC;QACJ,KAAK,MAAM;UACPV,GAAG,CAACoB,MAAM,CAACX,EAAE,EAAEC,EAAE,CAAC;UAClBV,GAAG,CAACqB,MAAM,CAACV,EAAE,EAAEC,EAAE,CAAC;UAClBZ,GAAG,CAACsB,MAAM,CAAC,CAAC;UACZ;QACJ,KAAK,QAAQ;UACT,MAAMC,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACd,EAAE,GAAGF,EAAE,EAAEG,EAAE,GAAGF,EAAE,CAAC;UACtCV,GAAG,CAAC0B,GAAG,CAACjB,EAAE,EAAEC,EAAE,EAAEa,CAAC,EAAE,CAAC,EAAE,CAAC,GAAGC,IAAI,CAACG,EAAE,CAAC;UAClC3B,GAAG,CAAC4B,IAAI,CAAC,CAAC;UACV5B,GAAG,CAACsB,MAAM,CAAC,CAAC;UACZ;QACJ,KAAK,UAAU;UACXtB,GAAG,CAACoB,MAAM,CAACX,EAAE,EAAEC,EAAE,CAAC;UAClBV,GAAG,CAACqB,MAAM,CAACV,EAAE,EAAED,EAAE,CAAC;UAClBV,GAAG,CAACqB,MAAM,CAAC,CAACZ,EAAE,GAAGE,EAAE,IAAI,CAAC,EAAEC,EAAE,CAAC;UAC7BZ,GAAG,CAAC6B,SAAS,CAAC,CAAC;UACf7B,GAAG,CAAC4B,IAAI,CAAC,CAAC;UACV5B,GAAG,CAACsB,MAAM,CAAC,CAAC;UACZ;QACJ,KAAK,SAAS;UACV,MAAMQ,KAAK,GAAG,CAAC;UACf,MAAMC,GAAG,GAAGP,IAAI,CAACC,KAAK,CAACd,EAAE,GAAGF,EAAE,EAAEG,EAAE,GAAGF,EAAE,CAAC;UACxC,MAAMsB,IAAI,GAAI,CAAC,GAAGR,IAAI,CAACG,EAAE,GAAIG,KAAK;UAClC,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,KAAK,EAAEG,CAAC,EAAE,EAAE;YAC5B,MAAMC,GAAG,GAAGD,CAAC,GAAGD,IAAI,GAAGR,IAAI,CAACG,EAAE,GAAG,CAAC;YAClC,MAAMQ,EAAE,GAAG1B,EAAE,GAAGsB,GAAG,GAAGP,IAAI,CAACY,GAAG,CAACF,GAAG,CAAC;YACnC,MAAMG,EAAE,GAAG3B,EAAE,GAAGqB,GAAG,GAAGP,IAAI,CAACc,GAAG,CAACJ,GAAG,CAAC;YACnCD,CAAC,KAAK,CAAC,GAAGjC,GAAG,CAACoB,MAAM,CAACe,EAAE,EAAEE,EAAE,CAAC,GAAGrC,GAAG,CAACqB,MAAM,CAACc,EAAE,EAAEE,EAAE,CAAC;UACrD;UACArC,GAAG,CAAC6B,SAAS,CAAC,CAAC;UACf7B,GAAG,CAAC4B,IAAI,CAAC,CAAC;UACV5B,GAAG,CAACsB,MAAM,CAAC,CAAC;UACZ;MACR;MACA,IAAIxB,QAAQ,EAAE;QACVE,GAAG,CAACgB,WAAW,GAAG,KAAK;QACvBhB,GAAG,CAACiB,SAAS,GAAGvD,WAAW;QAC3BsC,GAAG,CAACmB,UAAU,CACVK,IAAI,CAACe,GAAG,CAAC9B,EAAE,EAAEE,EAAE,CAAC,EAChBa,IAAI,CAACe,GAAG,CAAC7B,EAAE,EAAEE,EAAE,CAAC,EAChBY,IAAI,CAACgB,GAAG,CAAC7B,EAAE,GAAGF,EAAE,CAAC,EACjBe,IAAI,CAACgB,GAAG,CAAC5B,EAAE,GAAGF,EAAE,CACpB,CAAC;MACL;MACAV,GAAG,CAACyC,OAAO,CAAC,CAAC;IACjB,CAAC,CAAC;EACN,CAAC;EAED1F,SAAS,CAAC,MAAM;IACZ,MAAM2F,EAAE,GAAG7E,KAAK,CAACa,OAAO;IACxB,MAAMiE,IAAI,GAAGD,EAAE,CAACzC,UAAU,CAAC,IAAI,CAAC;IAChC,MAAM2C,MAAM,GAAGC,CAAC,IAAI;MAChB,MAAMtB,CAAC,GAAGmB,EAAE,CAACI,qBAAqB,CAAC,CAAC;MACpC,OAAO;QAAE1E,CAAC,EAAEyE,CAAC,CAACE,OAAO,GAAGxB,CAAC,CAACyB,IAAI;QAAE3E,CAAC,EAAEwE,CAAC,CAACI,OAAO,GAAG1B,CAAC,CAAC2B;MAAI,CAAC;IAC1D,CAAC;IAED,MAAMC,IAAI,GAAGN,CAAC,IAAI;MACd,IAAItF,UAAU,KAAK,QAAQ,EAAE;QACzB;QACAwC,SAAS,CAAC,CAAC;QACX;MACJ;MACA,IAAI,CAAC,CAAC,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS,CAAC,CAACqD,QAAQ,CAAC7F,UAAU,CAAC,EAAE;MAC/EY,WAAW,CAACyE,MAAM,CAACC,CAAC,CAAC,CAAC;MACtB5E,YAAY,CAAC,IAAI,CAAC;IACtB,CAAC;IAED,MAAMoF,IAAI,GAAGR,CAAC,IAAI;MACd,IAAI,CAAC7E,SAAS,EAAE;MAChB,MAAM;QAAEI,CAAC;QAAEC;MAAE,CAAC,GAAGuE,MAAM,CAACC,CAAC,CAAC;MAC1B,MAAMS,EAAE,GAAGlF,CAAC,GAAGF,QAAQ,CAACE,CAAC;QAAEmF,EAAE,GAAGlF,CAAC,GAAGH,QAAQ,CAACG,CAAC;MAC9CsE,IAAI,CAACzC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEwC,EAAE,CAACvC,KAAK,EAAEuC,EAAE,CAACtC,MAAM,CAAC;MACzCuC,IAAI,CAAC3B,WAAW,GAAGxD,SAAS;MAC5BmF,IAAI,CAAC1B,SAAS,GAAGvD,WAAW,CAAC,CAAiB;MAC9CiF,IAAI,CAACzB,SAAS,CAAC,CAAC;MAChB,QAAQ3D,UAAU;QACd,KAAK,QAAQ;UACToF,IAAI,CAACxB,UAAU,CAACjD,QAAQ,CAACE,CAAC,EAAEF,QAAQ,CAACG,CAAC,EAAEiF,EAAE,EAAEC,EAAE,CAAC;UAC/C;QACJ,KAAK,MAAM;UACPZ,IAAI,CAACvB,MAAM,CAAClD,QAAQ,CAACE,CAAC,EAAEF,QAAQ,CAACG,CAAC,CAAC;UACnCsE,IAAI,CAACtB,MAAM,CAACjD,CAAC,EAAEC,CAAC,CAAC;UACjBsE,IAAI,CAACrB,MAAM,CAAC,CAAC;UACb;QACJ,KAAK,QAAQ;UACTqB,IAAI,CAACjB,GAAG,CAACxD,QAAQ,CAACE,CAAC,EAAEF,QAAQ,CAACG,CAAC,EAAEmD,IAAI,CAACC,KAAK,CAAC6B,EAAE,EAAEC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG/B,IAAI,CAACG,EAAE,CAAC;UACpEgB,IAAI,CAACrB,MAAM,CAAC,CAAC;UACb;QACJ,KAAK,UAAU;UACXqB,IAAI,CAACvB,MAAM,CAAClD,QAAQ,CAACE,CAAC,EAAEF,QAAQ,CAACG,CAAC,CAAC;UACnCsE,IAAI,CAACtB,MAAM,CAACnD,QAAQ,CAACE,CAAC,GAAGkF,EAAE,EAAEpF,QAAQ,CAACG,CAAC,CAAC;UACxCsE,IAAI,CAACtB,MAAM,CAACnD,QAAQ,CAACE,CAAC,GAAGkF,EAAE,GAAG,CAAC,EAAEpF,QAAQ,CAACG,CAAC,GAAGkF,EAAE,CAAC;UACjDZ,IAAI,CAACd,SAAS,CAAC,CAAC;UAChBc,IAAI,CAACrB,MAAM,CAAC,CAAC;UACb;QACJ,KAAK,SAAS;UACV,MAAMkC,MAAM,GAAG,CAAC;UAChB,MAAMC,IAAI,GAAGjC,IAAI,CAACC,KAAK,CAAC6B,EAAE,EAAEC,EAAE,CAAC;UAC/B,MAAMG,KAAK,GAAG,CAAC,GAAGlC,IAAI,CAACG,EAAE,GAAG6B,MAAM;UAClC,KAAK,IAAIvB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuB,MAAM,EAAEvB,CAAC,EAAE,EAAE;YAC7B,MAAMC,GAAG,GAAGD,CAAC,GAAGyB,KAAK,GAAGlC,IAAI,CAACG,EAAE,GAAG,CAAC;YACnC,MAAMQ,EAAE,GAAGjE,QAAQ,CAACE,CAAC,GAAGqF,IAAI,GAAGjC,IAAI,CAACY,GAAG,CAACF,GAAG,CAAC;YAC5C,MAAMG,EAAE,GAAGnE,QAAQ,CAACG,CAAC,GAAGoF,IAAI,GAAGjC,IAAI,CAACc,GAAG,CAACJ,GAAG,CAAC;YAC5CD,CAAC,KAAK,CAAC,GAAGU,IAAI,CAACvB,MAAM,CAACe,EAAE,EAAEE,EAAE,CAAC,GAAGM,IAAI,CAACtB,MAAM,CAACc,EAAE,EAAEE,EAAE,CAAC;UACvD;UACAM,IAAI,CAACd,SAAS,CAAC,CAAC;UAChBc,IAAI,CAACrB,MAAM,CAAC,CAAC;UACb;MACR;IACJ,CAAC;IAED,MAAMqC,EAAE,GAAGd,CAAC,IAAI;MACZ,IAAI,CAAC7E,SAAS,EAAE;MAChB,MAAM;QAAEI,CAAC;QAAEC;MAAE,CAAC,GAAGuE,MAAM,CAACC,CAAC,CAAC;MAC1B/E,SAAS,CAACY,OAAO,CAACkF,IAAI,CAAC;QACnBpD,IAAI,EAAEjD,UAAU;QAChBkD,EAAE,EAAEvC,QAAQ,CAACE,CAAC;QAAEsC,EAAE,EAAExC,QAAQ,CAACG,CAAC;QAC9BsC,EAAE,EAAEvC,CAAC;QAAEwC,EAAE,EAAEvC,CAAC;QACZb,SAAS;QAAEC,SAAS;QACpBqC,QAAQ,EAAE;MACd,CAAC,CAAC;MACFC,SAAS,CAAC,CAAC;MACX4C,IAAI,CAACzC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEwC,EAAE,CAACvC,KAAK,EAAEuC,EAAE,CAACtC,MAAM,CAAC;MACzCnC,YAAY,CAAC,KAAK,CAAC;IACvB,CAAC;IAED,MAAM4F,SAAS,GAAGhB,CAAC,IAAI;MACnB,IAAIA,CAAC,CAACiB,OAAO,IAAIjB,CAAC,CAACkB,GAAG,KAAK,GAAG,IAAIjG,SAAS,CAACY,OAAO,CAACsF,MAAM,EAAE;QACxDjG,OAAO,CAACW,OAAO,CAACkF,IAAI,CAAC9F,SAAS,CAACY,OAAO,CAACuF,GAAG,CAAC,CAAC,CAAC;QAC7ClE,SAAS,CAAC,CAAC;MACf,CAAC,MAAM,IAAI8C,CAAC,CAACiB,OAAO,IAAIjB,CAAC,CAACqB,QAAQ,IAAIrB,CAAC,CAACkB,GAAG,CAACI,WAAW,CAAC,CAAC,KAAK,GAAG,IAAIpG,OAAO,CAACW,OAAO,CAACsF,MAAM,EAAE;QACzFlG,SAAS,CAACY,OAAO,CAACkF,IAAI,CAAC7F,OAAO,CAACW,OAAO,CAACuF,GAAG,CAAC,CAAC,CAAC;QAC7ClE,SAAS,CAAC,CAAC;MACf;IACJ,CAAC;IAED2C,EAAE,CAAC0B,gBAAgB,CAAC,WAAW,EAAEjB,IAAI,CAAC;IACtCT,EAAE,CAAC0B,gBAAgB,CAAC,WAAW,EAAEf,IAAI,CAAC;IACtCX,EAAE,CAAC0B,gBAAgB,CAAC,SAAS,EAAET,EAAE,CAAC;IAClCU,MAAM,CAACD,gBAAgB,CAAC,SAAS,EAAEP,SAAS,CAAC;IAC7C,OAAO,MAAM;MACTnB,EAAE,CAAC4B,mBAAmB,CAAC,WAAW,EAAEnB,IAAI,CAAC;MACzCT,EAAE,CAAC4B,mBAAmB,CAAC,WAAW,EAAEjB,IAAI,CAAC;MACzCX,EAAE,CAAC4B,mBAAmB,CAAC,SAAS,EAAEX,EAAE,CAAC;MACrCU,MAAM,CAACC,mBAAmB,CAAC,SAAS,EAAET,SAAS,CAAC;IACpD,CAAC;EACL,CAAC,EAAE,CAACtG,UAAU,EAAES,SAAS,EAAEE,QAAQ,EAAEV,SAAS,EAAEC,SAAS,EAAEC,WAAW,CAAC,CAAC;EAExE,oBACIP,OAAA;IAAKoH,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC7BrH,OAAA;MAAQQ,GAAG,EAAEC;IAAM;MAAA6G,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtBzH,OAAA;MAAQQ,GAAG,EAAEE,KAAM;MAACgH,KAAK,EAAE;QAAEC,eAAe,EAAE;MAAc;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChE,CAAC;AAEd,CAAC,iCACL,CAAC;AAACG,GAAA,GA/MI3H,MAAM;AAiNZ,eAAeA,MAAM;AAAC,IAAAE,EAAA,EAAAyH,GAAA;AAAAC,YAAA,CAAA1H,EAAA;AAAA0H,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}