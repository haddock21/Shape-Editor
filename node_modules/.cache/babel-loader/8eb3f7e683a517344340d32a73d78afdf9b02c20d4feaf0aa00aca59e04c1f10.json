{"ast":null,"code":"var _jsxFileName = \"/home/nightsquid/Desktop/GUI II/studyspace/src/components/Canvas.js\",\n  _s = $RefreshSig$();\n// src/components/Canvas.js\nimport React, { forwardRef, useImperativeHandle, useRef, useEffect, useState } from \"react\";\nimport { jsPDF } from \"jspdf\";\nimport \"../css/canvas.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = /*#__PURE__*/_s(/*#__PURE__*/forwardRef(_c = _s(({\n  activeTool,\n  lineColor,\n  fillColor\n}, ref) => {\n  _s();\n  const containerRef = useRef(null);\n  const c1Ref = useRef(null),\n    c2Ref = useRef(null);\n\n  // track current container size\n  const [size, setSize] = useState({\n    width: 0,\n    height: 0\n  });\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [startPos, setStartPos] = useState({\n    x: 0,\n    y: 0\n  });\n\n  // shapes + redo stacks\n  const shapesRef = useRef([]);\n  const redoRef = useRef([]);\n\n  // update size on mount + window resize\n  useEffect(() => {\n    const resize = () => {\n      const {\n        width,\n        height\n      } = containerRef.current.getBoundingClientRect();\n      setSize({\n        width,\n        height\n      });\n    };\n    resize();\n    window.addEventListener(\"resize\", resize);\n    return () => window.removeEventListener(\"resize\", resize);\n  }, []);\n\n  // whenever size changes, update canvas pixel dimensions & redraw\n  useEffect(() => {\n    [c1Ref.current, c2Ref.current].forEach(cnv => {\n      cnv.width = size.width;\n      cnv.height = size.height;\n    });\n    redrawAll();\n  }, [size]);\n\n  // expose download/export handlers\n  useImperativeHandle(ref, () => ({\n    exportShapes: () => {\n      const data = JSON.stringify(shapesRef.current, null, 2);\n      const blob = new Blob([data], {\n        type: \"application/json\"\n      });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = \"shapes.json\";\n      a.click();\n      URL.revokeObjectURL(url);\n    },\n    downloadJPEG: () => {\n      // composite background + shapes into offscreen and export\n      const tmp = document.createElement(\"canvas\");\n      tmp.width = size.width;\n      tmp.height = size.height;\n      const tctx = tmp.getContext(\"2d\");\n      tctx.fillStyle = \"#ffffff\";\n      tctx.fillRect(0, 0, tmp.width, tmp.height);\n      // draw your main layer\n      tctx.drawImage(c1Ref.current, 0, 0);\n      const dataURL = tmp.toDataURL(\"image/jpeg\", 1.0);\n      const link = document.createElement(\"a\");\n      link.href = dataURL;\n      link.download = \"canvas.jpg\";\n      link.click();\n    },\n    downloadPDF: () => {\n      const tmp = document.createElement(\"canvas\");\n      tmp.width = size.width;\n      tmp.height = size.height;\n      const tctx = tmp.getContext(\"2d\");\n      tctx.fillStyle = \"#ffffff\";\n      tctx.fillRect(0, 0, tmp.width, tmp.height);\n      tctx.drawImage(c1Ref.current, 0, 0);\n      const imgData = tmp.toDataURL(\"image/jpeg\", 1.0);\n      const pdf = new jsPDF({\n        unit: \"px\",\n        format: [size.width, size.height]\n      });\n      pdf.addImage(imgData, \"JPEG\", 0, 0, size.width, size.height);\n      pdf.save(\"canvas.pdf\");\n    },\n    loadShapes: arr => {\n      shapesRef.current = arr.map(s => ({\n        ...s,\n        selected: false\n      }));\n      redrawAll();\n    }\n  }));\n\n  // redrawAll (with background baked in)\n  const redrawAll = () => {\n    const ctx = c1Ref.current.getContext(\"2d\");\n    // clear + background\n    ctx.clearRect(0, 0, size.width, size.height);\n    // draw each shape\n    shapesRef.current.forEach(s => {\n      const {\n        tool,\n        x0,\n        y0,\n        x1,\n        y1,\n        lineColor: lc,\n        fillColor: fc,\n        selected\n      } = s;\n      ctx.save();\n      ctx.strokeStyle = lc || lineColor;\n      ctx.fillStyle = fc || fillColor;\n      ctx.lineWidth = 1;\n      ctx.beginPath();\n      switch (tool) {\n        case \"square\":\n          ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n          ctx.strokeRect(x0, y0, x1 - x0, y1 - y0);\n          break;\n        case \"line\":\n          ctx.moveTo(x0, y0);\n          ctx.lineTo(x1, y1);\n          ctx.stroke();\n          break;\n        case \"circle\":\n          const r = Math.hypot(x1 - x0, y1 - y0);\n          ctx.arc(x0, y0, r, 0, 2 * Math.PI);\n          ctx.fill();\n          ctx.stroke();\n          break;\n        case \"triangle\":\n          ctx.moveTo(x0, y0);\n          ctx.lineTo(x1, y0);\n          ctx.lineTo((x0 + x1) / 2, y1);\n          ctx.closePath();\n          ctx.fill();\n          ctx.stroke();\n          break;\n        case \"polygon\":\n          const sides = 5,\n            rad = Math.hypot(x1 - x0, y1 - y0),\n            step = 2 * Math.PI / sides;\n          for (let i = 0; i < sides; i++) {\n            const ang = i * step - Math.PI / 2;\n            const px = x0 + rad * Math.cos(ang);\n            const py = y0 + rad * Math.sin(ang);\n            i === 0 ? ctx.moveTo(px, py) : ctx.lineTo(px, py);\n          }\n          ctx.closePath();\n          ctx.fill();\n          ctx.stroke();\n          break;\n      }\n      if (selected) {\n        ctx.strokeStyle = \"red\";\n        ctx.strokeRect(Math.min(x0, x1), Math.min(y0, y1), Math.abs(x1 - x0), Math.abs(y1 - y0));\n      }\n      ctx.restore();\n    });\n  };\n\n  // drawing & selection logic (unchanged) goes here...\n  useEffect(() => {\n    const c2 = c2Ref.current,\n      ctx2 = c2.getContext(\"2d\");\n    const getPos = e => {\n      const r = c2.getBoundingClientRect();\n      return {\n        x: e.clientX - r.left,\n        y: e.clientY - r.top\n      };\n    };\n    const mouseDown = e => {\n      if (activeTool === \"cursor\") {\n        // selection logic (unchanged)...\n        const pos = getPos(e);\n        shapesRef.current.forEach(s => s.selected = false);\n        for (let i = shapesRef.current.length - 1; i >= 0; i--) {\n          const s = shapesRef.current[i],\n            minX = Math.min(s.x0, s.x1),\n            maxX = Math.max(s.x0, s.x1),\n            minY = Math.min(s.y0, s.y1),\n            maxY = Math.max(s.y0, s.y1);\n          if (pos.x >= minX && pos.x <= maxX && pos.y >= minY && pos.y <= maxY) {\n            s.selected = true;\n            break;\n          }\n        }\n        redrawAll();\n        return;\n      }\n      if (![\"square\", \"line\", \"circle\", \"triangle\", \"polygon\"].includes(activeTool)) return;\n      setStartPos(getPos(e));\n      setIsDrawing(true);\n    };\n    const mouseMove = e => {\n      if (!isDrawing) return;\n      const {\n        x,\n        y\n      } = getPos(e);\n      const dx = x - startPos.x,\n        dy = y - startPos.y;\n      ctx2.clearRect(0, 0, 600, 700);\n      ctx2.strokeStyle = lineColor;\n      ctx2.beginPath();\n      switch (activeTool) {\n        case \"square\":\n          ctx2.strokeRect(startPos.x, startPos.y, dx, dy);\n          break;\n        case \"line\":\n          ctx2.moveTo(startPos.x, startPos.y);\n          ctx2.lineTo(x, y);\n          ctx2.stroke();\n          break;\n        case \"circle\":\n          ctx2.arc(startPos.x, startPos.y, Math.hypot(dx, dy), 0, 2 * Math.PI);\n          ctx2.stroke();\n          break;\n        case \"triangle\":\n          ctx2.moveTo(startPos.x, startPos.y);\n          ctx2.lineTo(startPos.x + dx, startPos.y);\n          ctx2.lineTo(startPos.x + dx / 2, startPos.y + dy);\n          ctx2.closePath();\n          ctx2.stroke();\n          break;\n        case \"polygon\":\n          const sides = 5,\n            rad = Math.hypot(dx, dy),\n            step = 2 * Math.PI / sides;\n          for (let i = 0; i < sides; i++) {\n            const ang = i * step - Math.PI / 2;\n            const px = startPos.x + rad * Math.cos(ang),\n              py = startPos.y + rad * Math.sin(ang);\n            i === 0 ? ctx2.moveTo(px, py) : ctx2.lineTo(px, py);\n          }\n          ctx2.closePath();\n          ctx2.stroke();\n          break;\n        default:\n          break;\n      }\n    };\n    const mouseUp = e => {\n      if (!isDrawing) return;\n      const {\n        x,\n        y\n      } = getPos(e);\n      shapesRef.current.push({\n        tool: activeTool,\n        x0: startPos.x,\n        y0: startPos.y,\n        x1: x,\n        y1: y,\n        lineColor,\n        fillColor,\n        selected: false\n      });\n      redrawAll();\n      ctx2.clearRect(0, 0, 600, 700);\n      setIsDrawing(false);\n    };\n    const onKeyDown = e => {\n      if (e.ctrlKey && e.key === \"z\" && shapesRef.current.length) {\n        redoRef.current.push(shapesRef.current.at(shapesRef.current.length - 1));\n        shapesRef.current.pop();\n        redrawAll();\n      } else if (e.ctrlKey && e.shiftKey && e.key.toLowerCase() === \"z\" && redoRef.current.length) {\n        console.log(\"in redo\");\n        shapesRef.current.push(redoRef.current.at(redoRef.current.length - 1));\n        redoRef.current.pop();\n        redrawAll();\n      }\n    };\n    c2.addEventListener(\"mousedown\", mouseDown);\n    c2.addEventListener(\"mousemove\", mouseMove);\n    c2.addEventListener(\"mouseup\", mouseUp);\n    window.addEventListener(\"keydown\", onKeyDown);\n    return () => {\n      c2.removeEventListener(\"mousedown\", mouseDown);\n      c2.removeEventListener(\"mousemove\", mouseMove);\n      c2.removeEventListener(\"mouseup\", mouseUp);\n      window.removeEventListener(\"keydown\", onKeyDown);\n    };\n  }, [activeTool, isDrawing, startPos, lineColor, fillColor, size]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: c1Ref,\n      style: {\n        position: \"absolute\",\n        left: 0,\n        top: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: c2Ref,\n      style: {\n        position: \"absolute\",\n        left: 0,\n        top: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 262,\n    columnNumber: 9\n  }, this);\n}, \"yKvXx4JGB/fw6mRW2Oyjjtdq5kw=\")), \"yKvXx4JGB/fw6mRW2Oyjjtdq5kw=\");\n_c2 = Canvas;\nexport default Canvas;\nvar _c, _c2;\n$RefreshReg$(_c, \"Canvas$forwardRef\");\n$RefreshReg$(_c2, \"Canvas\");","map":{"version":3,"names":["React","forwardRef","useImperativeHandle","useRef","useEffect","useState","jsPDF","jsxDEV","_jsxDEV","Canvas","_s","_c","activeTool","lineColor","fillColor","ref","containerRef","c1Ref","c2Ref","size","setSize","width","height","isDrawing","setIsDrawing","startPos","setStartPos","x","y","shapesRef","redoRef","resize","current","getBoundingClientRect","window","addEventListener","removeEventListener","forEach","cnv","redrawAll","exportShapes","data","JSON","stringify","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","downloadJPEG","tmp","tctx","getContext","fillStyle","fillRect","drawImage","dataURL","toDataURL","link","downloadPDF","imgData","pdf","unit","format","addImage","save","loadShapes","arr","map","s","selected","ctx","clearRect","tool","x0","y0","x1","y1","lc","fc","strokeStyle","lineWidth","beginPath","strokeRect","moveTo","lineTo","stroke","r","Math","hypot","arc","PI","fill","closePath","sides","rad","step","i","ang","px","cos","py","sin","min","abs","restore","c2","ctx2","getPos","e","clientX","left","clientY","top","mouseDown","pos","length","minX","maxX","max","minY","maxY","includes","mouseMove","dx","dy","mouseUp","push","onKeyDown","ctrlKey","key","at","pop","shiftKey","toLowerCase","console","log","children","style","position","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/home/nightsquid/Desktop/GUI II/studyspace/src/components/Canvas.js"],"sourcesContent":["// src/components/Canvas.js\nimport React, {\n    forwardRef,\n    useImperativeHandle,\n    useRef,\n    useEffect,\n    useState,\n} from \"react\";\nimport { jsPDF } from \"jspdf\";\nimport \"../css/canvas.css\";\n\nconst Canvas = forwardRef(({ activeTool, lineColor, fillColor }, ref) => {\n    const containerRef = useRef(null);\n    const c1Ref = useRef(null), c2Ref = useRef(null);\n\n    // track current container size\n    const [size, setSize] = useState({ width: 0, height: 0 });\n\n    const [isDrawing, setIsDrawing] = useState(false);\n    const [startPos, setStartPos] = useState({ x: 0, y: 0 });\n    \n\n    // shapes + redo stacks\n    const shapesRef = useRef([]);\n    const redoRef = useRef([]);\n\n    // update size on mount + window resize\n    useEffect(() => {\n        const resize = () => {\n            const { width, height } = containerRef.current.getBoundingClientRect();\n            setSize({ width, height });\n        };\n        resize();\n        window.addEventListener(\"resize\", resize);\n        return () => window.removeEventListener(\"resize\", resize);\n    }, []);\n\n    // whenever size changes, update canvas pixel dimensions & redraw\n    useEffect(() => {\n        [c1Ref.current, c2Ref.current].forEach((cnv) => {\n            cnv.width = size.width;\n            cnv.height = size.height;\n        });\n        redrawAll();\n    }, [size]);\n\n    // expose download/export handlers\n    useImperativeHandle(ref, () => ({\n        exportShapes: () => {\n            const data = JSON.stringify(shapesRef.current, null, 2);\n            const blob = new Blob([data], { type: \"application/json\" });\n            const url = URL.createObjectURL(blob);\n            const a = document.createElement(\"a\");\n            a.href = url; a.download = \"shapes.json\"; a.click();\n            URL.revokeObjectURL(url);\n        },\n        downloadJPEG: () => {\n            // composite background + shapes into offscreen and export\n            const tmp = document.createElement(\"canvas\");\n            tmp.width = size.width;\n            tmp.height = size.height;\n            const tctx = tmp.getContext(\"2d\");\n\n            tctx.fillStyle = \"#ffffff\";\n            tctx.fillRect(0, 0, tmp.width, tmp.height);\n            // draw your main layer\n            tctx.drawImage(c1Ref.current, 0, 0);\n\n            const dataURL = tmp.toDataURL(\"image/jpeg\", 1.0);\n            const link = document.createElement(\"a\");\n            link.href = dataURL;\n            link.download = \"canvas.jpg\";\n            link.click();\n        },\n        downloadPDF: () => {\n            const tmp = document.createElement(\"canvas\");\n            tmp.width = size.width;\n            tmp.height = size.height;\n            const tctx = tmp.getContext(\"2d\");\n            tctx.fillStyle = \"#ffffff\";\n            tctx.fillRect(0, 0, tmp.width, tmp.height);\n            tctx.drawImage(c1Ref.current, 0, 0);\n\n            const imgData = tmp.toDataURL(\"image/jpeg\", 1.0);\n            const pdf = new jsPDF({ unit: \"px\", format: [size.width, size.height] });\n            pdf.addImage(imgData, \"JPEG\", 0, 0, size.width, size.height);\n            pdf.save(\"canvas.pdf\");\n        },\n        loadShapes: (arr) => {\n            shapesRef.current = arr.map((s) => ({ ...s, selected: false }));\n            redrawAll();\n        },\n    }));\n\n    // redrawAll (with background baked in)\n    const redrawAll = () => {\n        const ctx = c1Ref.current.getContext(\"2d\");\n        // clear + background\n        ctx.clearRect(0, 0, size.width, size.height);\n        // draw each shape\n        shapesRef.current.forEach((s) => {\n            const { tool, x0, y0, x1, y1, lineColor: lc, fillColor: fc, selected } = s;\n            ctx.save();\n            ctx.strokeStyle = lc || lineColor;\n            ctx.fillStyle = fc || fillColor;\n            ctx.lineWidth = 1;\n            ctx.beginPath();\n            switch (tool) {\n                case \"square\":\n                    ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n                    ctx.strokeRect(x0, y0, x1 - x0, y1 - y0);\n                    break;\n                case \"line\":\n                    ctx.moveTo(x0, y0);\n                    ctx.lineTo(x1, y1);\n                    ctx.stroke();\n                    break;\n                case \"circle\":\n                    const r = Math.hypot(x1 - x0, y1 - y0);\n                    ctx.arc(x0, y0, r, 0, 2 * Math.PI);\n                    ctx.fill();\n                    ctx.stroke();\n                    break;\n                case \"triangle\":\n                    ctx.moveTo(x0, y0);\n                    ctx.lineTo(x1, y0);\n                    ctx.lineTo((x0 + x1) / 2, y1);\n                    ctx.closePath();\n                    ctx.fill();\n                    ctx.stroke();\n                    break;\n                case \"polygon\":\n                    const sides = 5,\n                        rad = Math.hypot(x1 - x0, y1 - y0),\n                        step = (2 * Math.PI) / sides;\n                    for (let i = 0; i < sides; i++) {\n                        const ang = i * step - Math.PI / 2;\n                        const px = x0 + rad * Math.cos(ang);\n                        const py = y0 + rad * Math.sin(ang);\n                        i === 0 ? ctx.moveTo(px, py) : ctx.lineTo(px, py);\n                    }\n                    ctx.closePath();\n                    ctx.fill();\n                    ctx.stroke();\n                    break;\n            }\n            if (selected) {\n                ctx.strokeStyle = \"red\";\n                ctx.strokeRect(\n                    Math.min(x0, x1),\n                    Math.min(y0, y1),\n                    Math.abs(x1 - x0),\n                    Math.abs(y1 - y0)\n                );\n            }\n            ctx.restore();\n        });\n    };\n\n    // drawing & selection logic (unchanged) goes here...\n    useEffect(() => {\n        const c2 = c2Ref.current, ctx2 = c2.getContext(\"2d\");\n        const getPos = (e) => {\n            const r = c2.getBoundingClientRect();\n            return { x: e.clientX - r.left, y: e.clientY - r.top };\n        };\n\n        const mouseDown = e => {\n            if (activeTool === \"cursor\") {\n                // selection logic (unchanged)...\n                const pos = getPos(e);\n                shapesRef.current.forEach(s => s.selected = false);\n                for (let i = shapesRef.current.length - 1; i >= 0; i--) {\n                    const s = shapesRef.current[i],\n                        minX = Math.min(s.x0, s.x1), maxX = Math.max(s.x0, s.x1),\n                        minY = Math.min(s.y0, s.y1), maxY = Math.max(s.y0, s.y1);\n                    if (pos.x >= minX && pos.x <= maxX && pos.y >= minY && pos.y <= maxY) {\n                        s.selected = true; break;\n                    }\n                }\n                redrawAll(); return;\n            }\n            if (![\"square\", \"line\", \"circle\", \"triangle\", \"polygon\"].includes(activeTool))\n                return;\n            setStartPos(getPos(e)); setIsDrawing(true);\n        };\n\n        const mouseMove = e => {\n            if (!isDrawing) return;\n            const { x, y } = getPos(e);\n            const dx = x - startPos.x, dy = y - startPos.y;\n            ctx2.clearRect(0, 0, 600, 700);\n            ctx2.strokeStyle = lineColor;\n            ctx2.beginPath();\n            switch (activeTool) {\n                case \"square\": ctx2.strokeRect(startPos.x, startPos.y, dx, dy); break;\n                case \"line\": ctx2.moveTo(startPos.x, startPos.y); ctx2.lineTo(x, y); ctx2.stroke(); break;\n                case \"circle\": ctx2.arc(startPos.x, startPos.y, Math.hypot(dx, dy), 0, 2 * Math.PI); ctx2.stroke(); break;\n                case \"triangle\":\n                    ctx2.moveTo(startPos.x, startPos.y);\n                    ctx2.lineTo(startPos.x + dx, startPos.y);\n                    ctx2.lineTo(startPos.x + dx / 2, startPos.y + dy);\n                    ctx2.closePath(); ctx2.stroke();\n                    break;\n                case \"polygon\":\n                    const sides = 5, rad = Math.hypot(dx, dy), step = 2 * Math.PI / sides;\n                    for (let i = 0; i < sides; i++) {\n                        const ang = i * step - Math.PI / 2;\n                        const px = startPos.x + rad * Math.cos(ang),\n                            py = startPos.y + rad * Math.sin(ang);\n                        i === 0 ? ctx2.moveTo(px, py) : ctx2.lineTo(px, py);\n                    }\n                    ctx2.closePath(); ctx2.stroke();\n                    break;\n                default:\n                    break;\n            }\n        };\n        const mouseUp = e => {\n            if (!isDrawing) return;\n            const { x, y } = getPos(e);\n            shapesRef.current.push({\n                tool: activeTool,\n                x0: startPos.x, y0: startPos.y,\n                x1: x, y1: y,\n                lineColor, fillColor,\n                selected: false\n            });\n            redrawAll();\n            ctx2.clearRect(0, 0, 600, 700);\n            setIsDrawing(false);\n        };\n        const onKeyDown = e => {\n            if (e.ctrlKey && e.key === \"z\" && shapesRef.current.length) {\n                redoRef.current.push(shapesRef.current.at(shapesRef.current.length - 1));\n                shapesRef.current.pop();\n\n                redrawAll();\n            }\n            else if (e.ctrlKey && e.shiftKey && e.key.toLowerCase() === \"z\" && redoRef.current.length) {\n                console.log(\"in redo\");\n                shapesRef.current.push(redoRef.current.at(redoRef.current.length - 1));\n                redoRef.current.pop();\n                redrawAll();\n            }\n        }\n\n        c2.addEventListener(\"mousedown\", mouseDown);\n        c2.addEventListener(\"mousemove\", mouseMove);\n        c2.addEventListener(\"mouseup\", mouseUp);\n        window.addEventListener(\"keydown\", onKeyDown);\n        return () => {\n            c2.removeEventListener(\"mousedown\", mouseDown);\n            c2.removeEventListener(\"mousemove\", mouseMove);\n            c2.removeEventListener(\"mouseup\", mouseUp);\n            window.removeEventListener(\"keydown\", onKeyDown);\n\n        };\n    }, [activeTool, isDrawing, startPos, lineColor, fillColor, size]);\n\n    return (\n        <div ref={containerRef}>\n            <canvas ref={c1Ref} style={{ position: \"absolute\", left: 0, top: 0 }} />\n            <canvas ref={c2Ref} style={{ position: \"absolute\", left: 0, top: 0 }} />\n        </div>\n    );\n});\n\nexport default Canvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}