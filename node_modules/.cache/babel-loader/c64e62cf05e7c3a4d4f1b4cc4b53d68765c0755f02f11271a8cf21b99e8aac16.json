{"ast":null,"code":"var _jsxFileName = \"/home/nightsquid/Desktop/GUI II/studyspace/src/components/Canvas.js\",\n  _s = $RefreshSig$();\n// src/components/Canvas.js\nimport React, { forwardRef, useImperativeHandle, useRef, useEffect, useState } from \"react\";\nimport { jsPDF } from \"jspdf\";\nimport \"../css/canvas.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = /*#__PURE__*/_s(/*#__PURE__*/forwardRef(_c = _s(({\n  activeTool,\n  lineColor,\n  fillColor\n}, ref) => {\n  _s();\n  const c1Ref = useRef(),\n    c2Ref = useRef();\n  const shapesRef = useRef([]);\n  const redoRef = useRef([]);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [startPos, setStartPos] = useState({\n    x: 0,\n    y: 0\n  });\n\n  // expose export/load\n  useImperativeHandle(ref, () => ({\n    exportShapes: () => {\n      const data = JSON.stringify(shapesRef.current, null, 2);\n      const blob = new Blob([data], {\n        type: \"application/json\"\n      });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = \"shapes.json\";\n      a.click();\n      URL.revokeObjectURL(url);\n    },\n    downloadJPEG: () => {\n      const orig = c1Ref.current;\n      // 1) make an off-screen copy\n      const tmp = document.createElement(\"canvas\");\n      tmp.width = orig.width;\n      tmp.height = orig.height;\n      const tctx = tmp.getContext(\"2d\");\n      // 2) fill with your background color\n      tctx.fillStyle = \"#ffffff\";\n      tctx.fillRect(0, 0, tmp.width, tmp.height);\n      // 3) draw your shapes on top\n      tctx.drawImage(orig, 0, 0);\n      // 4) export that\n      const dataURL = tmp.toDataURL(\"image/jpeg\", 1.0);\n      const link = document.createElement(\"a\");\n      link.href = dataURL;\n      link.download = \"canvas.jpg\";\n      link.click();\n    },\n    downloadPDF: () => {\n      const orig = c1Ref.current;\n      const tmp = document.createElement(\"canvas\");\n      tmp.width = orig.width;\n      tmp.height = orig.height;\n      const tctx = tmp.getContext(\"2d\");\n      tctx.fillStyle = \"#ffffff\";\n      tctx.fillRect(0, 0, tmp.width, tmp.height);\n      tctx.drawImage(orig, 0, 0);\n      const imgData = tmp.toDataURL(\"image/jpeg\", 1.0);\n      const pdf = new jsPDF({\n        unit: \"px\",\n        format: [tmp.width, tmp.height]\n      });\n      pdf.addImage(imgData, \"JPEG\", 0, 0, tmp.width, tmp.height);\n      pdf.save(\"canvas.pdf\");\n    },\n    loadShapes: arr => {\n      shapesRef.current = arr.map(s => ({\n        ...s,\n        selected: false\n      }));\n      redrawAll();\n    }\n  }));\n  const redrawAll = () => {\n    const ctx = c1Ref.current.getContext(\"2d\");\n    ctx.clearRect(0, 0, 600, 700);\n    shapesRef.current.forEach(s => {\n      const {\n        tool,\n        x0,\n        y0,\n        x1,\n        y1,\n        selected,\n        lineColor: lc,\n        fillColor: fc\n      } = s;\n      ctx.save();\n      ctx.strokeStyle = lc || lineColor;\n      ctx.lineWidth = 1;\n      ctx.fillStyle = fc || fillColor;\n      ctx.beginPath();\n      switch (tool) {\n        case \"square\":\n          ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n          ctx.strokeRect(x0, y0, x1 - x0, y1 - y0);\n          break;\n        case \"line\":\n          ctx.moveTo(x0, y0);\n          ctx.lineTo(x1, y1);\n          ctx.stroke();\n          break;\n        case \"circle\":\n          const r = Math.hypot(x1 - x0, y1 - y0);\n          ctx.arc(x0, y0, r, 0, 2 * Math.PI);\n          ctx.fill();\n          ctx.stroke();\n          break;\n        case \"triangle\":\n          ctx.moveTo(x0, y0);\n          ctx.lineTo(x1, y0);\n          ctx.lineTo((x0 + x1) / 2, y1);\n          ctx.closePath();\n          ctx.fill();\n          ctx.stroke();\n          break;\n        case \"polygon\":\n          const sides = 5,\n            rad = Math.hypot(x1 - x0, y1 - y0),\n            step = 2 * Math.PI / sides;\n          for (let i = 0; i < sides; i++) {\n            const ang = i * step - Math.PI / 2;\n            const px = x0 + rad * Math.cos(ang),\n              py = y0 + rad * Math.sin(ang);\n            i === 0 ? ctx.moveTo(px, py) : ctx.lineTo(px, py);\n          }\n          ctx.closePath();\n          ctx.fill();\n          ctx.stroke();\n          break;\n        default:\n          break;\n      }\n      if (selected) {\n        ctx.strokeStyle = \"red\";\n        ctx.strokeRect(Math.min(x0, x1), Math.min(y0, y1), Math.abs(x1 - x0), Math.abs(y1 - y0));\n      }\n      ctx.restore();\n    });\n  };\n  useEffect(() => {\n    const c2 = c2Ref.current,\n      ctx2 = c2.getContext(\"2d\");\n    const getPos = e => {\n      const r = c2.getBoundingClientRect();\n      return {\n        x: e.clientX - r.left,\n        y: e.clientY - r.top\n      };\n    };\n    const down = e => {\n      if (activeTool === \"cursor\") {\n        // selection logic (unchanged)...\n        const pos = getPos(e);\n        shapesRef.current.forEach(s => s.selected = false);\n        for (let i = shapesRef.current.length - 1; i >= 0; i--) {\n          const s = shapesRef.current[i],\n            minX = Math.min(s.x0, s.x1),\n            maxX = Math.max(s.x0, s.x1),\n            minY = Math.min(s.y0, s.y1),\n            maxY = Math.max(s.y0, s.y1);\n          if (pos.x >= minX && pos.x <= maxX && pos.y >= minY && pos.y <= maxY) {\n            s.selected = true;\n            break;\n          }\n        }\n        redrawAll();\n        return;\n      }\n      if (![\"square\", \"line\", \"circle\", \"triangle\", \"polygon\"].includes(activeTool)) return;\n      setStartPos(getPos(e));\n      setIsDrawing(true);\n    };\n    const move = e => {\n      if (!isDrawing) return;\n      const {\n        x,\n        y\n      } = getPos(e);\n      const dx = x - startPos.x,\n        dy = y - startPos.y;\n      ctx2.clearRect(0, 0, 600, 700);\n      ctx2.strokeStyle = lineColor;\n      ctx2.beginPath();\n      switch (activeTool) {\n        case \"square\":\n          ctx2.strokeRect(startPos.x, startPos.y, dx, dy);\n          break;\n        case \"line\":\n          ctx2.moveTo(startPos.x, startPos.y);\n          ctx2.lineTo(x, y);\n          ctx2.stroke();\n          break;\n        case \"circle\":\n          ctx2.arc(startPos.x, startPos.y, Math.hypot(dx, dy), 0, 2 * Math.PI);\n          ctx2.stroke();\n          break;\n        case \"triangle\":\n          ctx2.moveTo(startPos.x, startPos.y);\n          ctx2.lineTo(startPos.x + dx, startPos.y);\n          ctx2.lineTo(startPos.x + dx / 2, startPos.y + dy);\n          ctx2.closePath();\n          ctx2.stroke();\n          break;\n        case \"polygon\":\n          const sides = 5,\n            rad = Math.hypot(dx, dy),\n            step = 2 * Math.PI / sides;\n          for (let i = 0; i < sides; i++) {\n            const ang = i * step - Math.PI / 2;\n            const px = startPos.x + rad * Math.cos(ang),\n              py = startPos.y + rad * Math.sin(ang);\n            i === 0 ? ctx2.moveTo(px, py) : ctx2.lineTo(px, py);\n          }\n          ctx2.closePath();\n          ctx2.stroke();\n          break;\n        default:\n          break;\n      }\n    };\n    const up = e => {\n      if (!isDrawing) return;\n      const {\n        x,\n        y\n      } = getPos(e);\n      shapesRef.current.push({\n        tool: activeTool,\n        x0: startPos.x,\n        y0: startPos.y,\n        x1: x,\n        y1: y,\n        lineColor,\n        fillColor,\n        selected: false\n      });\n      redrawAll();\n      ctx2.clearRect(0, 0, 600, 700);\n      setIsDrawing(false);\n    };\n    const onKeyDown = e => {\n      if (e.ctrlKey && e.key === \"z\" && shapesRef.current.length) {\n        redoRef.current.push(shapesRef.current.at(shapesRef.current.length - 1));\n        shapesRef.current.pop();\n        redrawAll();\n      } else if (e.ctrlKey && e.shiftKey && e.key.toLowerCase() === \"z\" && redoRef.current.length) {\n        console.log(\"in redo\");\n        shapesRef.current.push(redoRef.current.at(redoRef.current.length - 1));\n        redoRef.current.pop();\n        redrawAll();\n      }\n    };\n    c2.addEventListener(\"mousedown\", down);\n    c2.addEventListener(\"mousemove\", move);\n    c2.addEventListener(\"mouseup\", up);\n    window.addEventListener(\"keydown\", onKeyDown);\n    return () => {\n      c2.removeEventListener(\"mousedown\", down);\n      c2.removeEventListener(\"mousemove\", move);\n      c2.removeEventListener(\"mouseup\", up);\n      window.removeEventListener(\"keydown\", onKeyDown);\n    };\n  }, [activeTool, isDrawing, startPos, lineColor, fillColor]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvas-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: c1Ref,\n      width: 600,\n      height: 700\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: c2Ref,\n      width: 600,\n      height: 700,\n      style: {\n        backgroundColor: \"transparent\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 9\n  }, this);\n}, \"K2CpK1DuvRus3POa7s2/re6JUmU=\")), \"K2CpK1DuvRus3POa7s2/re6JUmU=\");\n_c2 = Canvas;\nexport default Canvas;\nvar _c, _c2;\n$RefreshReg$(_c, \"Canvas$forwardRef\");\n$RefreshReg$(_c2, \"Canvas\");","map":{"version":3,"names":["React","forwardRef","useImperativeHandle","useRef","useEffect","useState","jsPDF","jsxDEV","_jsxDEV","Canvas","_s","_c","activeTool","lineColor","fillColor","ref","c1Ref","c2Ref","shapesRef","redoRef","isDrawing","setIsDrawing","startPos","setStartPos","x","y","exportShapes","data","JSON","stringify","current","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","downloadJPEG","orig","tmp","width","height","tctx","getContext","fillStyle","fillRect","drawImage","dataURL","toDataURL","link","downloadPDF","imgData","pdf","unit","format","addImage","save","loadShapes","arr","map","s","selected","redrawAll","ctx","clearRect","forEach","tool","x0","y0","x1","y1","lc","fc","strokeStyle","lineWidth","beginPath","strokeRect","moveTo","lineTo","stroke","r","Math","hypot","arc","PI","fill","closePath","sides","rad","step","i","ang","px","cos","py","sin","min","abs","restore","c2","ctx2","getPos","e","getBoundingClientRect","clientX","left","clientY","top","down","pos","length","minX","maxX","max","minY","maxY","includes","move","dx","dy","up","push","onKeyDown","ctrlKey","key","at","pop","shiftKey","toLowerCase","console","log","addEventListener","window","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","_c2","$RefreshReg$"],"sources":["/home/nightsquid/Desktop/GUI II/studyspace/src/components/Canvas.js"],"sourcesContent":["// src/components/Canvas.js\nimport React, {\n    forwardRef, useImperativeHandle,\n    useRef, useEffect, useState\n} from \"react\";\nimport { jsPDF } from \"jspdf\";\nimport \"../css/canvas.css\";\n\nconst Canvas = forwardRef(({ activeTool, lineColor, fillColor }, ref) => {\n    const c1Ref = useRef(), c2Ref = useRef();\n    const shapesRef = useRef([]);\n    const redoRef = useRef([]);\n    const [isDrawing, setIsDrawing] = useState(false);\n    const [startPos, setStartPos] = useState({ x: 0, y: 0 });\n\n    // expose export/load\n    useImperativeHandle(ref, () => ({\n        exportShapes: () => {\n            const data = JSON.stringify(shapesRef.current, null, 2);\n            const blob = new Blob([data], { type: \"application/json\" });\n            const url = URL.createObjectURL(blob);\n            const a = document.createElement(\"a\");\n            a.href = url; a.download = \"shapes.json\"; a.click();\n            URL.revokeObjectURL(url);\n        },\n        downloadJPEG: () => {\n            const orig = c1Ref.current;\n            // 1) make an off-screen copy\n            const tmp = document.createElement(\"canvas\");\n            tmp.width = orig.width;\n            tmp.height = orig.height;\n            const tctx = tmp.getContext(\"2d\");\n            // 2) fill with your background color\n            tctx.fillStyle = \"#ffffff\";\n            tctx.fillRect(0, 0, tmp.width, tmp.height);\n            // 3) draw your shapes on top\n            tctx.drawImage(orig, 0, 0);\n            // 4) export that\n            const dataURL = tmp.toDataURL(\"image/jpeg\", 1.0);\n            const link = document.createElement(\"a\");\n            link.href = dataURL;\n            link.download = \"canvas.jpg\";\n            link.click();\n        },\n        downloadPDF: () => {\n            const orig = c1Ref.current;\n            const tmp = document.createElement(\"canvas\");\n            tmp.width = orig.width;\n            tmp.height = orig.height;\n            const tctx = tmp.getContext(\"2d\");\n            tctx.fillStyle = \"#ffffff\";\n            tctx.fillRect(0, 0, tmp.width, tmp.height);\n            tctx.drawImage(orig, 0, 0);\n\n            const imgData = tmp.toDataURL(\"image/jpeg\", 1.0);\n            const pdf = new jsPDF({\n                unit: \"px\",\n                format: [tmp.width, tmp.height],\n            });\n            pdf.addImage(imgData, \"JPEG\", 0, 0, tmp.width, tmp.height);\n            pdf.save(\"canvas.pdf\");\n        },\n        loadShapes: (arr) => {\n            shapesRef.current = arr.map(s => ({ ...s, selected: false }));\n            redrawAll();\n        }\n    }));\n\n    const redrawAll = () => {\n        const ctx = c1Ref.current.getContext(\"2d\");\n        ctx.clearRect(0, 0, 600, 700);\n        shapesRef.current.forEach(s => {\n            const { tool, x0, y0, x1, y1, selected, lineColor: lc, fillColor: fc } = s;\n            ctx.save();\n            ctx.strokeStyle = lc || lineColor;\n            ctx.lineWidth = 1;\n            ctx.fillStyle = fc || fillColor;\n            ctx.beginPath();\n            switch (tool) {\n                case \"square\":\n                    ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n                    ctx.strokeRect(x0, y0, x1 - x0, y1 - y0);\n                    break;\n                case \"line\":\n                    ctx.moveTo(x0, y0); ctx.lineTo(x1, y1); ctx.stroke();\n                    break;\n                case \"circle\":\n                    const r = Math.hypot(x1 - x0, y1 - y0);\n                    ctx.arc(x0, y0, r, 0, 2 * Math.PI);\n                    ctx.fill(); ctx.stroke();\n                    break;\n                case \"triangle\":\n                    ctx.moveTo(x0, y0);\n                    ctx.lineTo(x1, y0);\n                    ctx.lineTo((x0 + x1) / 2, y1);\n                    ctx.closePath();\n                    ctx.fill(); ctx.stroke();\n                    break;\n                case \"polygon\":\n                    const sides = 5, rad = Math.hypot(x1 - x0, y1 - y0), step = 2 * Math.PI / sides;\n                    for (let i = 0; i < sides; i++) {\n                        const ang = i * step - Math.PI / 2;\n                        const px = x0 + rad * Math.cos(ang),\n                            py = y0 + rad * Math.sin(ang);\n                        i === 0 ? ctx.moveTo(px, py) : ctx.lineTo(px, py);\n                    }\n                    ctx.closePath();\n                    ctx.fill(); ctx.stroke();\n                    break;\n                default:\n                    break;\n            }\n            if (selected) {\n                ctx.strokeStyle = \"red\";\n                ctx.strokeRect(Math.min(x0, x1), Math.min(y0, y1),\n                    Math.abs(x1 - x0), Math.abs(y1 - y0));\n            }\n            ctx.restore();\n        });\n    };\n\n    useEffect(() => {\n        const c2 = c2Ref.current, ctx2 = c2.getContext(\"2d\");\n        const getPos = e => {\n            const r = c2.getBoundingClientRect();\n            return { x: e.clientX - r.left, y: e.clientY - r.top };\n        };\n\n        const down = e => {\n            if (activeTool === \"cursor\") {\n                // selection logic (unchanged)...\n                const pos = getPos(e);\n                shapesRef.current.forEach(s => s.selected = false);\n                for (let i = shapesRef.current.length - 1; i >= 0; i--) {\n                    const s = shapesRef.current[i],\n                        minX = Math.min(s.x0, s.x1), maxX = Math.max(s.x0, s.x1),\n                        minY = Math.min(s.y0, s.y1), maxY = Math.max(s.y0, s.y1);\n                    if (pos.x >= minX && pos.x <= maxX && pos.y >= minY && pos.y <= maxY) {\n                        s.selected = true; break;\n                    }\n                }\n                redrawAll(); return;\n            }\n            if (![\"square\", \"line\", \"circle\", \"triangle\", \"polygon\"].includes(activeTool))\n                return;\n            setStartPos(getPos(e)); setIsDrawing(true);\n        };\n\n        const move = e => {\n            if (!isDrawing) return;\n            const { x, y } = getPos(e);\n            const dx = x - startPos.x, dy = y - startPos.y;\n            ctx2.clearRect(0, 0, 600, 700);\n            ctx2.strokeStyle = lineColor;\n            ctx2.beginPath();\n            switch (activeTool) {\n                case \"square\": ctx2.strokeRect(startPos.x, startPos.y, dx, dy); break;\n                case \"line\": ctx2.moveTo(startPos.x, startPos.y); ctx2.lineTo(x, y); ctx2.stroke(); break;\n                case \"circle\": ctx2.arc(startPos.x, startPos.y, Math.hypot(dx, dy), 0, 2 * Math.PI); ctx2.stroke(); break;\n                case \"triangle\":\n                    ctx2.moveTo(startPos.x, startPos.y);\n                    ctx2.lineTo(startPos.x + dx, startPos.y);\n                    ctx2.lineTo(startPos.x + dx / 2, startPos.y + dy);\n                    ctx2.closePath(); ctx2.stroke();\n                    break;\n                case \"polygon\":\n                    const sides = 5, rad = Math.hypot(dx, dy), step = 2 * Math.PI / sides;\n                    for (let i = 0; i < sides; i++) {\n                        const ang = i * step - Math.PI / 2;\n                        const px = startPos.x + rad * Math.cos(ang),\n                            py = startPos.y + rad * Math.sin(ang);\n                        i === 0 ? ctx2.moveTo(px, py) : ctx2.lineTo(px, py);\n                    }\n                    ctx2.closePath(); ctx2.stroke();\n                    break;\n                default:\n                    break;\n            }\n        };\n\n        const up = e => {\n            if (!isDrawing) return;\n            const { x, y } = getPos(e);\n            shapesRef.current.push({\n                tool: activeTool,\n                x0: startPos.x, y0: startPos.y,\n                x1: x, y1: y,\n                lineColor, fillColor,\n                selected: false\n            });\n            redrawAll();\n            ctx2.clearRect(0, 0, 600, 700);\n            setIsDrawing(false);\n        };\n\n        const onKeyDown = e => {\n            if (e.ctrlKey && e.key === \"z\" && shapesRef.current.length) {\n                redoRef.current.push(shapesRef.current.at(shapesRef.current.length - 1));\n                shapesRef.current.pop();\n\n                redrawAll();\n            }\n            else if (e.ctrlKey && e.shiftKey && e.key.toLowerCase() === \"z\" && redoRef.current.length) {\n                console.log(\"in redo\");\n                shapesRef.current.push(redoRef.current.at(redoRef.current.length - 1));\n                redoRef.current.pop();\n                redrawAll();\n            }\n        }\n\n        c2.addEventListener(\"mousedown\", down);\n        c2.addEventListener(\"mousemove\", move);\n        c2.addEventListener(\"mouseup\", up);\n        window.addEventListener(\"keydown\", onKeyDown);\n        return () => {\n            c2.removeEventListener(\"mousedown\", down);\n            c2.removeEventListener(\"mousemove\", move);\n            c2.removeEventListener(\"mouseup\", up);\n            window.removeEventListener(\"keydown\", onKeyDown);\n\n        };\n    }, [activeTool, isDrawing, startPos, lineColor, fillColor]);\n\n    return (\n        <div className=\"canvas-container\">\n            <canvas ref={c1Ref} width={600} height={700} />\n            <canvas ref={c2Ref} width={600} height={700} style={{ backgroundColor: \"transparent\" }} />\n        </div>\n    );\n});\n\nexport default Canvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}