{"ast":null,"code":"var _jsxFileName = \"/home/nightsquid/Desktop/GUI II/studyspace/src/components/Canvas.js\",\n  _s = $RefreshSig$();\n// src/components/Canvas.js\nimport React, { forwardRef, useImperativeHandle, useRef, useEffect, useState } from \"react\";\nimport { jsPDF } from \"jspdf\";\nimport \"../css/canvas.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = /*#__PURE__*/_s(/*#__PURE__*/forwardRef(_c = _s(({\n  activeTool,\n  lineColor,\n  fillColor\n}, ref) => {\n  _s();\n  const containerRef = useRef(null);\n  const c1Ref = useRef(null);\n  const c2Ref = useRef(null);\n  const shapesRef = useRef([]);\n  const redoRef = useRef([]);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [startPos, setStartPos] = useState({\n    x: 0,\n    y: 0\n  });\n\n  // 1) Expose export/load/download handlers\n  useImperativeHandle(ref, () => ({\n    exportShapes: () => {\n      const data = JSON.stringify(shapesRef.current, null, 2);\n      const blob = new Blob([data], {\n        type: \"application/json\"\n      });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement(\"a\");\n      a.href = url;\n      a.download = \"shapes.json\";\n      a.click();\n      URL.revokeObjectURL(url);\n    },\n    downloadJPEG: () => {\n      const canvas = c1Ref.current;\n      const shapes = shapesRef.current;\n\n      // determine crop region\n      let sx = 0,\n        sy = 0,\n        sw = canvas.width,\n        sh = canvas.height;\n      if (shapes.length) {\n        let minX = Infinity,\n          minY = Infinity;\n        let maxX = -Infinity,\n          maxY = -Infinity;\n        shapes.forEach(s => {\n          minX = Math.min(minX, s.x0, s.x1);\n          minY = Math.min(minY, s.y0, s.y1);\n          maxX = Math.max(maxX, s.x0, s.x1);\n          maxY = Math.max(maxY, s.y0, s.y1);\n        });\n        sx = minX - 25;\n        sy = minY - 25;\n        sw = maxX - minX + 50;\n        sh = maxY - minY + 50;\n      }\n\n      // offscreen canvas of just that region\n      const tmp = document.createElement(\"canvas\");\n      tmp.width = sw;\n      tmp.height = sh;\n      const tctx = tmp.getContext(\"2d\");\n\n      // draw the cropped region\n      tctx.drawImage(canvas, sx, sy, sw, sh,\n      // source rect\n      0, 0, sw, sh // dest rect\n      );\n\n      // export as JPEG\n      const dataURL = tmp.toDataURL(\"image/jpeg\", 1.0);\n      const link = document.createElement(\"a\");\n      link.href = dataURL;\n      link.download = \"shapes.jpg\";\n      link.click();\n    },\n    downloadPDF: () => {\n      const canvas = c1Ref.current;\n      const shapes = shapesRef.current;\n\n      // same crop logic\n      let sx = 0,\n        sy = 0,\n        sw = canvas.width,\n        sh = canvas.height;\n      if (shapes.length) {\n        let minX = Infinity,\n          minY = Infinity;\n        let maxX = -Infinity,\n          maxY = -Infinity;\n        shapes.forEach(s => {\n          minX = Math.min(minX, s.x0, s.x1);\n          minY = Math.min(minY, s.y0, s.y1);\n          maxX = Math.max(maxX, s.x0, s.x1);\n          maxY = Math.max(maxY, s.y0, s.y1);\n        });\n        sx = minX;\n        sy = minY;\n        sw = maxX - minX;\n        sh = maxY - minY;\n      }\n\n      // offscreen crop\n      const tmp = document.createElement(\"canvas\");\n      tmp.width = sw;\n      tmp.height = sh;\n      const tctx = tmp.getContext(\"2d\");\n      tctx.drawImage(canvas, sx, sy, sw, sh, 0, 0, sw, sh);\n\n      // export to PDF\n      const imgData = tmp.toDataURL(\"image/jpeg\", 1.0);\n      const pdf = new jsPDF({\n        unit: \"px\",\n        format: [sw, sh]\n      });\n      pdf.addImage(imgData, \"JPEG\", 0, 0, sw, sh);\n      pdf.save(\"shapes.pdf\");\n    },\n    loadShapes: arr => {\n      shapesRef.current = arr.map(s => ({\n        ...s,\n        selected: false\n      }));\n      redrawAll();\n    }\n  }));\n\n  // 2) Resize loop: keep canvas internal size in sync with CSS size\n  useEffect(() => {\n    const resize = () => {\n      const {\n        width,\n        height\n      } = containerRef.current.getBoundingClientRect();\n      c1Ref.current.width = width;\n      c1Ref.current.height = height;\n      c2Ref.current.width = width;\n      c2Ref.current.height = height;\n      redrawAll();\n    };\n    resize();\n    window.addEventListener(\"resize\", resize);\n    return () => window.removeEventListener(\"resize\", resize);\n  }, []);\n\n  // 3) Redraw everything (with baked-in background)\n  function redrawAll(ctx, offsetX = 0, offsetY = 0) {\n    const w = ctx.canvas.width;\n    const h = ctx.canvas.height;\n\n    // 1) clear & paint background\n    ctx.clearRect(0, 0, w, h);\n    ctx.fillStyle = \"#979797\";\n    ctx.fillRect(0, 0, w, h);\n\n    // 2) draw each shape, offset by offsetX/offsetY\n    shapesRef.current.forEach(s => {\n      const lc = s.lineColor || lineColor;\n      const fc = s.fillColor || fillColor;\n      ctx.save();\n      ctx.strokeStyle = lc;\n      ctx.fillStyle = fc;\n      ctx.lineWidth = 1;\n      ctx.beginPath();\n      const x0 = s.x0 + offsetX;\n      const y0 = s.y0 + offsetY;\n      const x1 = s.x1 + offsetX;\n      const y1 = s.y1 + offsetY;\n      switch (s.tool) {\n        case \"square\":\n          ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n          ctx.strokeRect(x0, y0, x1 - x0, y1 - y0);\n          break;\n        case \"line\":\n          ctx.moveTo(x0, y0);\n          ctx.lineTo(x1, y1);\n          ctx.stroke();\n          break;\n        case \"circle\":\n          const r = Math.hypot(s.x1 - s.x0, s.y1 - s.y0);\n          ctx.arc(x0, y0, r, 0, 2 * Math.PI);\n          ctx.fill();\n          ctx.stroke();\n          break;\n        case \"triangle\":\n          ctx.moveTo(x0, y0);\n          ctx.lineTo(x1, y0);\n          ctx.lineTo((x0 + x1) / 2, y1);\n          ctx.closePath();\n          ctx.fill();\n          ctx.stroke();\n          break;\n        case \"polygon\":\n          const sides = 5;\n          const radius = Math.hypot(s.x1 - s.x0, s.y1 - s.y0);\n          const step = 2 * Math.PI / sides;\n          for (let i = 0; i < sides; i++) {\n            const ang = i * step - Math.PI / 2;\n            const px = s.x0 + radius * Math.cos(ang) + offsetX;\n            const py = s.y0 + radius * Math.sin(ang) + offsetY;\n            i === 0 ? ctx.moveTo(px, py) : ctx.lineTo(px, py);\n          }\n          ctx.closePath();\n          ctx.fill();\n          ctx.stroke();\n          break;\n      }\n\n      // 3) if shape is selected, draw red bounding box\n      if (s.selected) {\n        const bx0 = Math.min(s.x0, s.x1) + offsetX;\n        const by0 = Math.min(s.y0, s.y1) + offsetY;\n        const bw = Math.abs(s.x1 - s.x0);\n        const bh = Math.abs(s.y1 - s.y0);\n        ctx.strokeStyle = \"red\";\n        ctx.strokeRect(bx0, by0, bw, bh);\n      }\n      ctx.restore();\n    });\n  }\n\n  // 4) Drawing & selection logic\n  useEffect(() => {\n    const c2 = c2Ref.current;\n    const ctx2 = c2.getContext(\"2d\");\n    const getPos = e => {\n      const r = c2.getBoundingClientRect();\n      return {\n        x: e.clientX - r.left,\n        y: e.clientY - r.top\n      };\n    };\n    const down = e => {\n      if (activeTool === \"cursor\") {\n        const pos = getPos(e);\n        shapesRef.current.forEach(s => s.selected = false);\n        for (let i = shapesRef.current.length - 1; i >= 0; i--) {\n          const s = shapesRef.current[i],\n            minX = Math.min(s.x0, s.x1),\n            maxX = Math.max(s.x0, s.x1),\n            minY = Math.min(s.y0, s.y1),\n            maxY = Math.max(s.y0, s.y1);\n          if (pos.x >= minX && pos.x <= maxX && pos.y >= minY && pos.y <= maxY) {\n            s.selected = true;\n            break;\n          }\n        }\n        redrawAll();\n        return;\n      }\n      if (![\"square\", \"line\", \"circle\", \"triangle\", \"polygon\"].includes(activeTool)) return;\n      setStartPos(getPos(e));\n      setIsDrawing(true);\n    };\n    const move = e => {\n      if (!isDrawing) return;\n      const {\n        x,\n        y\n      } = getPos(e);\n      const dx = x - startPos.x,\n        dy = y - startPos.y;\n      ctx2.clearRect(0, 0, c2.width, c2.height);\n      ctx2.strokeStyle = lineColor;\n      ctx2.beginPath();\n      switch (activeTool) {\n        case \"square\":\n          ctx2.strokeRect(startPos.x, startPos.y, dx, dy);\n          break;\n        case \"line\":\n          ctx2.moveTo(startPos.x, startPos.y);\n          ctx2.lineTo(x, y);\n          ctx2.stroke();\n          break;\n        case \"circle\":\n          ctx2.arc(startPos.x, startPos.y, Math.hypot(dx, dy), 0, 2 * Math.PI);\n          ctx2.stroke();\n          break;\n        case \"triangle\":\n          ctx2.moveTo(startPos.x, startPos.y);\n          ctx2.lineTo(startPos.x + dx, startPos.y);\n          ctx2.lineTo(startPos.x + dx / 2, startPos.y + dy);\n          ctx2.closePath();\n          ctx2.stroke();\n          break;\n        case \"polygon\":\n          const sides2 = 5,\n            rad2 = Math.hypot(dx, dy),\n            step2 = 2 * Math.PI / sides2;\n          for (let i = 0; i < sides2; i++) {\n            const ang = i * step2 - Math.PI / 2,\n              px = startPos.x + rad2 * Math.cos(ang),\n              py = startPos.y + rad2 * Math.sin(ang);\n            i === 0 ? ctx2.moveTo(px, py) : ctx2.lineTo(px, py);\n          }\n          ctx2.closePath();\n          ctx2.stroke();\n          break;\n      }\n    };\n    const up = e => {\n      if (!isDrawing) return;\n      const {\n        x,\n        y\n      } = getPos(e);\n      shapesRef.current.push({\n        tool: activeTool,\n        x0: startPos.x,\n        y0: startPos.y,\n        x1: x,\n        y1: y,\n        lineColor,\n        fillColor,\n        selected: false\n      });\n      redrawAll();\n      ctx2.clearRect(0, 0, c2.width, c2.height);\n      setIsDrawing(false);\n    };\n    const onKeyDown = e => {\n      if (e.ctrlKey && e.key === \"z\" && shapesRef.current.length) {\n        redoRef.current.push(shapesRef.current.pop());\n        redrawAll();\n      } else if (e.ctrlKey && e.shiftKey && e.key.toLowerCase() === \"z\" && redoRef.current.length) {\n        shapesRef.current.push(redoRef.current.pop());\n        redrawAll();\n      }\n    };\n    c2.addEventListener(\"mousedown\", down);\n    c2.addEventListener(\"mousemove\", move);\n    c2.addEventListener(\"mouseup\", up);\n    window.addEventListener(\"keydown\", onKeyDown);\n    return () => {\n      c2.removeEventListener(\"mousedown\", down);\n      c2.removeEventListener(\"mousemove\", move);\n      c2.removeEventListener(\"mouseup\", up);\n      window.removeEventListener(\"keydown\", onKeyDown);\n    };\n  }, [activeTool, isDrawing, startPos, lineColor, fillColor]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    className: \"canvas-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: c1Ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: c2Ref,\n      style: {\n        backgroundColor: \"transparent\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 322,\n    columnNumber: 9\n  }, this);\n}, \"UJLDpA+bOaQrWpjxwsKEiK11vyM=\")), \"UJLDpA+bOaQrWpjxwsKEiK11vyM=\");\n_c2 = Canvas;\nexport default Canvas;\nvar _c, _c2;\n$RefreshReg$(_c, \"Canvas$forwardRef\");\n$RefreshReg$(_c2, \"Canvas\");","map":{"version":3,"names":["React","forwardRef","useImperativeHandle","useRef","useEffect","useState","jsPDF","jsxDEV","_jsxDEV","Canvas","_s","_c","activeTool","lineColor","fillColor","ref","containerRef","c1Ref","c2Ref","shapesRef","redoRef","isDrawing","setIsDrawing","startPos","setStartPos","x","y","exportShapes","data","JSON","stringify","current","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","downloadJPEG","canvas","shapes","sx","sy","sw","width","sh","height","length","minX","Infinity","minY","maxX","maxY","forEach","s","Math","min","x0","x1","y0","y1","max","tmp","tctx","getContext","drawImage","dataURL","toDataURL","link","downloadPDF","imgData","pdf","unit","format","addImage","save","loadShapes","arr","map","selected","redrawAll","resize","getBoundingClientRect","window","addEventListener","removeEventListener","ctx","offsetX","offsetY","w","h","clearRect","fillStyle","fillRect","lc","fc","strokeStyle","lineWidth","beginPath","tool","strokeRect","moveTo","lineTo","stroke","r","hypot","arc","PI","fill","closePath","sides","radius","step","i","ang","px","cos","py","sin","bx0","by0","bw","abs","bh","restore","c2","ctx2","getPos","e","clientX","left","clientY","top","down","pos","includes","move","dx","dy","sides2","rad2","step2","up","push","onKeyDown","ctrlKey","key","pop","shiftKey","toLowerCase","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","_c2","$RefreshReg$"],"sources":["/home/nightsquid/Desktop/GUI II/studyspace/src/components/Canvas.js"],"sourcesContent":["// src/components/Canvas.js\nimport React, {\n    forwardRef,\n    useImperativeHandle,\n    useRef,\n    useEffect,\n    useState\n} from \"react\";\nimport { jsPDF } from \"jspdf\";\nimport \"../css/canvas.css\";\n\nconst Canvas = forwardRef(({ activeTool, lineColor, fillColor }, ref) => {\n    const containerRef = useRef(null);\n    const c1Ref = useRef(null);\n    const c2Ref = useRef(null);\n\n    const shapesRef = useRef([]);\n    const redoRef = useRef([]);\n\n    const [isDrawing, setIsDrawing] = useState(false);\n    const [startPos, setStartPos] = useState({ x: 0, y: 0 });\n\n    // 1) Expose export/load/download handlers\n    useImperativeHandle(ref, () => ({\n        exportShapes: () => {\n            const data = JSON.stringify(shapesRef.current, null, 2);\n            const blob = new Blob([data], { type: \"application/json\" });\n            const url = URL.createObjectURL(blob);\n            const a = document.createElement(\"a\");\n            a.href = url; a.download = \"shapes.json\"; a.click();\n            URL.revokeObjectURL(url);\n        },\n        downloadJPEG: () => {\n            const canvas = c1Ref.current;\n            const shapes = shapesRef.current;\n\n            // determine crop region\n            let sx = 0, sy = 0, sw = canvas.width, sh = canvas.height;\n            if (shapes.length) {\n                let minX = Infinity, minY = Infinity;\n                let maxX = -Infinity, maxY = -Infinity;\n                shapes.forEach(s => {\n                    minX = Math.min(minX, s.x0, s.x1);\n                    minY = Math.min(minY, s.y0, s.y1);\n                    maxX = Math.max(maxX, s.x0, s.x1);\n                    maxY = Math.max(maxY, s.y0, s.y1);\n                });\n                sx = minX - 25;\n                sy = minY - 25;\n                sw = maxX - minX + 50;\n                sh = maxY - minY + 50;\n            }\n\n            // offscreen canvas of just that region\n            const tmp = document.createElement(\"canvas\");\n            tmp.width = sw;\n            tmp.height = sh;\n            const tctx = tmp.getContext(\"2d\");\n\n            // draw the cropped region\n            tctx.drawImage(canvas,\n                sx, sy, sw, sh,   // source rect\n                0, 0, sw, sh    // dest rect\n            );\n\n            // export as JPEG\n            const dataURL = tmp.toDataURL(\"image/jpeg\", 1.0);\n            const link = document.createElement(\"a\");\n            link.href = dataURL;\n            link.download = \"shapes.jpg\";\n            link.click();\n        },\n\n        downloadPDF: () => {\n            const canvas = c1Ref.current;\n            const shapes = shapesRef.current;\n\n            // same crop logic\n            let sx = 0, sy = 0, sw = canvas.width, sh = canvas.height;\n            if (shapes.length) {\n                let minX = Infinity, minY = Infinity;\n                let maxX = -Infinity, maxY = -Infinity;\n                shapes.forEach(s => {\n                    minX = Math.min(minX, s.x0, s.x1);\n                    minY = Math.min(minY, s.y0, s.y1);\n                    maxX = Math.max(maxX, s.x0, s.x1);\n                    maxY = Math.max(maxY, s.y0, s.y1);\n                });\n                sx = minX;\n                sy = minY;\n                sw = maxX - minX;\n                sh = maxY - minY;\n            }\n\n            // offscreen crop\n            const tmp = document.createElement(\"canvas\");\n            tmp.width = sw;\n            tmp.height = sh;\n            const tctx = tmp.getContext(\"2d\");\n            tctx.drawImage(canvas, sx, sy, sw, sh, 0, 0, sw, sh);\n\n            // export to PDF\n            const imgData = tmp.toDataURL(\"image/jpeg\", 1.0);\n            const pdf = new jsPDF({ unit: \"px\", format: [sw, sh] });\n            pdf.addImage(imgData, \"JPEG\", 0, 0, sw, sh);\n            pdf.save(\"shapes.pdf\");\n        },\n        loadShapes: (arr) => {\n            shapesRef.current = arr.map(s => ({ ...s, selected: false }));\n            redrawAll();\n        }\n    }));\n\n    // 2) Resize loop: keep canvas internal size in sync with CSS size\n    useEffect(() => {\n        const resize = () => {\n            const { width, height } = containerRef.current.getBoundingClientRect();\n            c1Ref.current.width = width;\n            c1Ref.current.height = height;\n            c2Ref.current.width = width;\n            c2Ref.current.height = height;\n            redrawAll();\n        };\n        resize();\n        window.addEventListener(\"resize\", resize);\n        return () => window.removeEventListener(\"resize\", resize);\n    }, []);\n\n    // 3) Redraw everything (with baked-in background)\n    function redrawAll(ctx, offsetX = 0, offsetY = 0) {\n        const w = ctx.canvas.width;\n        const h = ctx.canvas.height;\n\n        // 1) clear & paint background\n        ctx.clearRect(0, 0, w, h);\n        ctx.fillStyle = \"#979797\";\n        ctx.fillRect(0, 0, w, h);\n\n        // 2) draw each shape, offset by offsetX/offsetY\n        shapesRef.current.forEach(s => {\n            const lc = s.lineColor || lineColor;\n            const fc = s.fillColor || fillColor;\n            ctx.save();\n            ctx.strokeStyle = lc;\n            ctx.fillStyle = fc;\n            ctx.lineWidth = 1;\n            ctx.beginPath();\n\n            const x0 = s.x0 + offsetX;\n            const y0 = s.y0 + offsetY;\n            const x1 = s.x1 + offsetX;\n            const y1 = s.y1 + offsetY;\n\n            switch (s.tool) {\n                case \"square\":\n                    ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n                    ctx.strokeRect(x0, y0, x1 - x0, y1 - y0);\n                    break;\n\n                case \"line\":\n                    ctx.moveTo(x0, y0);\n                    ctx.lineTo(x1, y1);\n                    ctx.stroke();\n                    break;\n\n                case \"circle\":\n                    const r = Math.hypot(s.x1 - s.x0, s.y1 - s.y0);\n                    ctx.arc(x0, y0, r, 0, 2 * Math.PI);\n                    ctx.fill();\n                    ctx.stroke();\n                    break;\n\n                case \"triangle\":\n                    ctx.moveTo(x0, y0);\n                    ctx.lineTo(x1, y0);\n                    ctx.lineTo((x0 + x1) / 2, y1);\n                    ctx.closePath();\n                    ctx.fill();\n                    ctx.stroke();\n                    break;\n\n                case \"polygon\":\n                    const sides = 5;\n                    const radius = Math.hypot(s.x1 - s.x0, s.y1 - s.y0);\n                    const step = (2 * Math.PI) / sides;\n                    for (let i = 0; i < sides; i++) {\n                        const ang = i * step - Math.PI / 2;\n                        const px = s.x0 + radius * Math.cos(ang) + offsetX;\n                        const py = s.y0 + radius * Math.sin(ang) + offsetY;\n                        i === 0 ? ctx.moveTo(px, py) : ctx.lineTo(px, py);\n                    }\n                    ctx.closePath();\n                    ctx.fill();\n                    ctx.stroke();\n                    break;\n            }\n\n            // 3) if shape is selected, draw red bounding box\n            if (s.selected) {\n                const bx0 = Math.min(s.x0, s.x1) + offsetX;\n                const by0 = Math.min(s.y0, s.y1) + offsetY;\n                const bw = Math.abs(s.x1 - s.x0);\n                const bh = Math.abs(s.y1 - s.y0);\n                ctx.strokeStyle = \"red\";\n                ctx.strokeRect(bx0, by0, bw, bh);\n            }\n\n            ctx.restore();\n        });\n    }\n\n    // 4) Drawing & selection logic\n    useEffect(() => {\n        const c2 = c2Ref.current;\n        const ctx2 = c2.getContext(\"2d\");\n\n        const getPos = e => {\n            const r = c2.getBoundingClientRect();\n            return { x: e.clientX - r.left, y: e.clientY - r.top };\n        };\n\n        const down = e => {\n            if (activeTool === \"cursor\") {\n                const pos = getPos(e);\n                shapesRef.current.forEach(s => s.selected = false);\n                for (let i = shapesRef.current.length - 1; i >= 0; i--) {\n                    const s = shapesRef.current[i],\n                        minX = Math.min(s.x0, s.x1), maxX = Math.max(s.x0, s.x1),\n                        minY = Math.min(s.y0, s.y1), maxY = Math.max(s.y0, s.y1);\n                    if (pos.x >= minX && pos.x <= maxX && pos.y >= minY && pos.y <= maxY) {\n                        s.selected = true; break;\n                    }\n                }\n                redrawAll();\n                return;\n            }\n            if (![\"square\", \"line\", \"circle\", \"triangle\", \"polygon\"].includes(activeTool)) return;\n            setStartPos(getPos(e));\n            setIsDrawing(true);\n        };\n\n        const move = e => {\n            if (!isDrawing) return;\n            const { x, y } = getPos(e);\n            const dx = x - startPos.x, dy = y - startPos.y;\n            ctx2.clearRect(0, 0, c2.width, c2.height);\n            ctx2.strokeStyle = lineColor;\n            ctx2.beginPath();\n            switch (activeTool) {\n                case \"square\":\n                    ctx2.strokeRect(startPos.x, startPos.y, dx, dy);\n                    break;\n                case \"line\":\n                    ctx2.moveTo(startPos.x, startPos.y);\n                    ctx2.lineTo(x, y);\n                    ctx2.stroke();\n                    break;\n                case \"circle\":\n                    ctx2.arc(startPos.x, startPos.y, Math.hypot(dx, dy), 0, 2 * Math.PI);\n                    ctx2.stroke();\n                    break;\n                case \"triangle\":\n                    ctx2.moveTo(startPos.x, startPos.y);\n                    ctx2.lineTo(startPos.x + dx, startPos.y);\n                    ctx2.lineTo(startPos.x + dx / 2, startPos.y + dy);\n                    ctx2.closePath();\n                    ctx2.stroke();\n                    break;\n                case \"polygon\":\n                    const sides2 = 5, rad2 = Math.hypot(dx, dy), step2 = 2 * Math.PI / sides2;\n                    for (let i = 0; i < sides2; i++) {\n                        const ang = i * step2 - Math.PI / 2,\n                            px = startPos.x + rad2 * Math.cos(ang),\n                            py = startPos.y + rad2 * Math.sin(ang);\n                        i === 0 ? ctx2.moveTo(px, py) : ctx2.lineTo(px, py);\n                    }\n                    ctx2.closePath();\n                    ctx2.stroke();\n                    break;\n            }\n        };\n\n        const up = e => {\n            if (!isDrawing) return;\n            const { x, y } = getPos(e);\n            shapesRef.current.push({\n                tool: activeTool,\n                x0: startPos.x, y0: startPos.y,\n                x1: x, y1: y,\n                lineColor, fillColor,\n                selected: false\n            });\n            redrawAll();\n            ctx2.clearRect(0, 0, c2.width, c2.height);\n            setIsDrawing(false);\n        };\n\n        const onKeyDown = e => {\n            if (e.ctrlKey && e.key === \"z\" && shapesRef.current.length) {\n                redoRef.current.push(shapesRef.current.pop());\n                redrawAll();\n            }\n            else if (e.ctrlKey && e.shiftKey && e.key.toLowerCase() === \"z\" && redoRef.current.length) {\n                shapesRef.current.push(redoRef.current.pop());\n                redrawAll();\n            }\n        };\n\n        c2.addEventListener(\"mousedown\", down);\n        c2.addEventListener(\"mousemove\", move);\n        c2.addEventListener(\"mouseup\", up);\n        window.addEventListener(\"keydown\", onKeyDown);\n        return () => {\n            c2.removeEventListener(\"mousedown\", down);\n            c2.removeEventListener(\"mousemove\", move);\n            c2.removeEventListener(\"mouseup\", up);\n            window.removeEventListener(\"keydown\", onKeyDown);\n        };\n    }, [activeTool, isDrawing, startPos, lineColor, fillColor]);\n\n    return (\n        <div ref={containerRef} className=\"canvas-container\">\n            <canvas ref={c1Ref} />\n            <canvas ref={c2Ref} style={{ backgroundColor: \"transparent\" }} />\n        </div>\n    );\n});\n\nexport default Canvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}